---!!! DO NOT MANUALLY EDIT THIS FILE !!!
---Generated by lua-doc-extractor 3.3.2
---https://github.com/rhys-vdw/lua-doc-extractor
---
---Source: rts/Lua/LuaSyncedRead.cpp
---
---@meta

---Synced Read
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L92-L96" target="_blank">source</a>]
---
---@see rts/Lua/LuaSyncedRead.cpp

---Game States
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L756-L759" target="_blank">source</a>]
---
---@section gamestates

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L762-L767" target="_blank">source</a>]
---
---@return boolean enabled
function Spring.IsCheatingEnabled() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L775-L780" target="_blank">source</a>]
---
---@return boolean enabled
function Spring.IsGodModeEnabled() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L790-L795" target="_blank">source</a>]
---
---@return boolean enabled
function Spring.IsDevLuaEnabled() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L803-L808" target="_blank">source</a>]
---
---@return boolean enabled
function Spring.IsEditDefsEnabled() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L816-L821" target="_blank">source</a>]
---
---@return boolean enabled
function Spring.IsNoCostEnabled() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L829-L836" target="_blank">source</a>]
---
---@param teamID integer?
---@return boolean enabled
function Spring.GetGlobalLos(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L848-L853" target="_blank">source</a>]
---
---@return boolean enabled
function Spring.AreHelperAIsEnabled() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L861-L866" target="_blank">source</a>]
---
---@return boolean? enabled
function Spring.FixedAllies() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L874-L879" target="_blank">source</a>]
---
---@return boolean isGameOver
function Spring.IsGameOver() end

---Speed/Time
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L890-L893" target="_blank">source</a>]
---
---@section speedtime

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L896-L902" target="_blank">source</a>]
---
---@return number t1 frameNum % dayFrames
---@return number t2 frameNum / dayFrames
function Spring.GetGameFrame() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L914-L919" target="_blank">source</a>]
---
---@return number seconds
function Spring.GetGameSeconds() end

---Environment
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L927-L930" target="_blank">source</a>]
---
---@section environment

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L933-L938" target="_blank">source</a>]
---
---@return number tidalStrength
function Spring.GetTidal() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L946-L957" target="_blank">source</a>]
---
---@return number windSpeedX
---@return number windSpeedY (Always 0)
---@return number windSpeedZ
---@return number windStrength (Length of windSpeed)
---@return number windDirX (Normalized windSpeed)
---@return number windDirY (Always 0)
---@return number windDirZ
function Spring.GetWind() end

---Rules/Params
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L971-L978" target="_blank">source</a>]
---
---@section environment
---
---The following functions allow to save data per game, team and unit.
---The advantage of it is that it can be read from anywhere (even from LuaUI and AIs!)

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L980-L982" target="_blank">source</a>]
---
---@class RulesParams : table<string, integer>
local RulesParams = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L984-L989" target="_blank">source</a>]
---
---@return RulesParams rulesParams map with rules names as key and values as values
function Spring.GetGameRulesParams() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L997-L1004" target="_blank">source</a>]
---
---@param teamID integer
---@return RulesParams rulesParams map with rules names as key and values as values
function Spring.GetTeamRulesParams(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1023-L1030" target="_blank">source</a>]
---
---@param playerID integer
---@return RulesParams rulesParams map with rules names as key and values as values
function Spring.GetPlayerRulesParams(playerID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1092-L1099" target="_blank">source</a>]
---
---@param unitID integer
---@return RulesParams rulesParams map with rules names as key and values as values
function Spring.GetUnitRulesParams(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1110-L1117" target="_blank">source</a>]
---
---@param featureID integer
---@return RulesParams rulesParams map with rules names as key and values as values
function Spring.GetFeatureRulesParams(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1146-L1153" target="_blank">source</a>]
---
---@param ruleRef number|string the rule index or name
---@return number?|string value
function Spring.GetGameRulesParam(ruleRef) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1161-L1169" target="_blank">source</a>]
---
---@param teamID integer
---@param ruleRef number|string the rule index or name
---@return number|string|nil value
function Spring.GetTeamRulesParam(teamID, ruleRef) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1189-L1197" target="_blank">source</a>]
---
---@param playerID integer
---@param ruleRef number|string the rule index or name
---@return number|string|nil value
function Spring.GetPlayerRulesParam(playerID, ruleRef) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1220-L1228" target="_blank">source</a>]
---
---@param unitID integer
---@param ruleRef number|string the rule index or name
---@return number|string|nil value
function Spring.GetUnitRulesParam(unitID, ruleRef) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1239-L1247" target="_blank">source</a>]
---
---@param featureID integer
---@param ruleRef number|string the rule index or name
---@return number|string|nil value
function Spring.GetFeatureRulesParam(featureID, ruleRef) end

---Mod and Map options
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1274-L1288" target="_blank">source</a>]
---
---@section modmapoptions
---
---*Warning*: boolean values are not transferred from C to Lua correctly.
---For this reason the respective option has to be converted to a number
---and checked accordingly via an IF statement as shown below:
---
---    if (tonumber(Spring.GetModOptions.exampleOption) == 1) then...end
---
---The following check therefore is insufficient!
---
---    if (Spring.GetModOptions.exampleOption) then...end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1315-L1322" target="_blank">source</a>]
---
---@param mapOption string
---@return string value Value of `modOption`.
function Spring.GetMapOption(mapOption) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1327-L1332" target="_blank">source</a>]
---
---@return table<string, string> mapOptions Table with options names as keys and values as values.
function Spring.GetMapOptions() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1339-L1346" target="_blank">source</a>]
---
---@param modOption string
---@return string value Value of `modOption`.
function Spring.GetModOption(modOption) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1353-L1358" target="_blank">source</a>]
---
---@return table<string, string> modOptions Table with options names as keys and values as values.
function Spring.GetModOptions() end

---Vectors
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1365-L1369" target="_blank">source</a>]
---
---@section vectors

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1372-L1380" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return number heading
function Spring.GetHeadingFromVector(x, z) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1391-L1399" target="_blank">source</a>]
---
---@param heading number
---@return number x
---@return number z
function Spring.GetVectorFromHeading(heading) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1409-L1413" target="_blank">source</a>]
---
---@param heading number
---@return FacingInteger facing
function Spring.GetFacingFromHeading(heading) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1420-L1424" target="_blank">source</a>]
---
---@param facing FacingInteger
---@return number heading
function Spring.GetHeadingFromFacing(facing) end

---Sides and Factions
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1432-L1436" target="_blank">source</a>]
---
---@section sidesfactions

---Side spec
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1439-L1451" target="_blank">source</a>]
---
---@class SideSpec
---@x_helper
---
---Returned when getting arrays of side specifications.
---@field sideName string Lowercase side name.
---@field caseName string Original case side name.
---@field startUnit string
---@see Spring.GetSideData
local SideSpec = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1453-L1459" target="_blank">source</a>]
---
---@param sideName string Case-insensitive side name.
---@return string? startUnit
---@return string? caseName Original case side name.
function Spring.GetSideData(sideName) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1461-L1467" target="_blank">source</a>]
---
---@param sideID integer
---@return string? sideName Lowercase side name.
---@return string? startUnit
---@return string? caseName Original case side name.
function Spring.GetSideData(sideID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1469-L1472" target="_blank">source</a>]
---
---@return SideSpec[] sideArray
function Spring.GetSideData() end

---Teams
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1512-L1516" target="_blank">source</a>]
---
---@section Teams

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1519-L1524" target="_blank">source</a>]
---
---@return integer teamID
function Spring.GetGaiaTeamID() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1535-L1545" target="_blank">source</a>]
---
---@param allyID integer
---@return number? xMin
---@return number? zMin
---@return number? xMax
---@return number? zMax
function Spring.GetAllyTeamStartBox(allyID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1567-L1576" target="_blank">source</a>]
---
---@param teamID integer
---@return number? x
---@return number? y
---@return number? x
function Spring.GetTeamStartPosition(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1595-L1599" target="_blank">source</a>]
---
---@return float3[] array of positions indexed by teamID
function Spring.GetMapStartPositions() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1621-L1625" target="_blank">source</a>]
---
---@return integer[] allyTeamIDs
function Spring.GetAllyTeamList() end

---Get all team IDs.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1641-L1647" target="_blank">source</a>]
---
---@param allyTeamID -1|nil (Default: `-1`)
---@return number[] teamIDs List of team IDs.
function Spring.GetTeamList(allyTeamID) end

---Get team IDs in a specific ally team.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1649-L1655" target="_blank">source</a>]
---
---@param allyTeamID integer The ally team ID to filter teams by. A value less than 0 will return all teams.
---@return number[]? teamIDs List of team IDs or `nil` if `allyTeamID` is invalid.
function Spring.GetTeamList(allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1691-L1697" target="_blank">source</a>]
---
---@param teamID integer? (Default: `-1`) to filter by when >= 0
---@param active boolean? (Default: `false`) whether to filter only active teams
---@return number[]? list of playerIDs
function Spring.GetPlayerList(teamID, active) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1745-L1758" target="_blank">source</a>]
---
---@param teamID integer
---@param getTeamKeys boolean? (Default: `true`) whether to return the customTeamKeys table
---@return integer? teamID
---@return number leader
---@return number isDead
---@return number hasAI
---@return string side
---@return number allyTeam
---@return number incomeMultiplier
---@return table<string,string> customTeamKeys when getTeamKeys is true, otherwise nil
function Spring.GetTeamInfo(teamID, getTeamKeys) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1796-L1801" target="_blank">source</a>]
---
---@param teamID integer
---@return integer? allyTeamID
function Spring.GetTeamAllyTeamID(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1817-L1831" target="_blank">source</a>]
---
---@param teamID integer
---@param resource ResourceName
---@return number? currentLevel The current amount of the resource that the team has in storage at this moment
---@return number storage       The maximum storage capacity for the resource.
---@return number pull          The total amount of the resource that is being requested/used by all units and buildings per second, regardless of whether the resource is actually available.
---@return number income        The total amount of the resource being generated per second from all sources (e.g., mines, generators, reclaiming, etc.).
---@return number expense       The total amount of the resource actually being spent per second. This is the real consumption, which may be less than pull if there isn’t enough resource available.
---@return number share         The fraction (0.0 to 1.0) of the storage that the team is sharing with allied teams. A value of 0.0 means 100% of storage is shared, while 1.0 means only any excess is shared.
---@return number sent          The total amount of the resource that has actually been sent to allies (via sharing or manual transfer).
---@return number received      The total amount of the resource that has actually been received from allies (via sharing or manual transfer).
---@return number excess        The amount of the resource that was lost due to storage overflow (wasted).
function Spring.GetTeamResources(teamID, resource) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1876-L1886" target="_blank">source</a>]
---
---@param teamID integer
---@return number? killed
---@return number died
---@return number capturedBy
---@return number capturedFrom
---@return number received
---@return number sent
function Spring.GetTeamUnitStats(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1911-L1921" target="_blank">source</a>]
---
---@param teamID integer
---@param resource ResourceName
---@return number? used
---@return number produced
---@return number excessed
---@return number received
---@return number sent
function Spring.GetTeamResourceStats(teamID, resource) end

---Gets team damage dealt/received totals
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1960-L1970" target="_blank">source</a>]
---
---Returns a team's damage stats. Note that all damage is counted,
---including self-inflicted and unconfirmed out-of-sight.
---
---@param teamID integer
---@return number damageDealt
---@return number damageReceived
function Spring.GetTeamDamageStats(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L1991-L2014" target="_blank">source</a>]
---
---@class TeamStats
---@x_helper
---@field time number
---@field frame number
---@field metalUsed number
---@field metalProduced number
---@field metalExcess number
---@field metalReceived number
---@field metalSent number
---@field energyUsed number
---@field energyProduced number
---@field energyExcess number
---@field energyReceived number
---@field energySent number
---@field damageDealt number
---@field damageReceived number
---@field unitsProduced integer
---@field unitsDied integer
---@field unitsReceived integer
---@field unitsSent integer
---@field unitsCaptured integer
---@field unitsOutCaptured integer
local TeamStats = {}

---Get the number of history entries.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2016-L2021" target="_blank">source</a>]
---
---@param teamID integer
---@return integer? historyCount The number of history entries, or `nil` if unable to resolve team.
function Spring.GetTeamStatsHistory(teamID) end

---Get team stats history.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2022-L2029" target="_blank">source</a>]
---
---@param teamID integer
---@param startIndex integer
---@param endIndex integer? (Default: startIndex)
---@return TeamStats[] The team stats history, or `nil` if unable to resolve team.
function Spring.GetTeamStatsHistory(teamID, startIndex, endIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2115-L2120" target="_blank">source</a>]
---
---@param teamID integer
---@return string
function Spring.GetTeamLuaAI(teamID) end

---Returns a team's unit cap.
---
---Also returns the current unit count for readable teams as the 2nd value.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2148-L2156" target="_blank">source</a>]
---
---@param teamID integer
---@return number maxUnits
---@return number? currentUnits
function Spring.GetTeamMaxUnits(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2173-L2190" target="_blank">source</a>]
---
---@param playerID integer
---@param getPlayerOpts boolean? (Default: `true`) whether to return custom player options
---@return string name
---@return boolean active
---@return boolean spectator
---@return integer teamID
---@return integer allyTeamID
---@return number pingTime
---@return number cpuUsage
---@return string country
---@return number rank
---@return boolean hasSkirmishAIsInTeam
---@return {[string]: string} playerOpts when playerOpts is true
---@return boolean desynced
function Spring.GetPlayerInfo(playerID, getPlayerOpts) end

---Returns unit controlled by player on FPS mode
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2238-L2243" target="_blank">source</a>]
---
---@param playerID integer
---@return number?
function Spring.GetPlayerControlledUnit(playerID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2274-L2284" target="_blank">source</a>]
---
---@param teamID integer
---@return integer skirmishAIID
---@return string name
---@return integer hostingPlayerID
---@return string shortName When synced `"SYNCED_NOSHORTNAME"`, otherwise the AI shortname or `"UNKNOWN"`.
---@return string version When synced `"SYNCED_NOVERSION"`, otherwise the AI version or `"UNKNOWN"`.
---@return table<string,string> options
function Spring.GetAIInfo(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2333-L2338" target="_blank">source</a>]
---
---@param allyTeamID integer
---@return table<string,string>?
function Spring.GetAllyTeamInfo(allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2359-L2365" target="_blank">source</a>]
---
---@param teamID1 number
---@param teamID2 number
---@return boolean?
function Spring.AreTeamsAllied(teamID1, teamID2) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2379-L2385" target="_blank">source</a>]
---
---@param playerID1 number
---@param playerID2 number
---@return boolean?
function Spring.ArePlayersAllied(playerID1, playerID2) end

---Unit queries
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2408-L2412" target="_blank">source</a>]
---
---@section unit_queries

---Get a list of all unitIDs
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2415-L2428" target="_blank">source</a>]
---
---Note that when called from a widget, this also returns units that are only
---radar blips.
---
---For units that are radar blips, you may want to check if they are in los,
---as GetUnitDefID() will still return true if they have previously been seen.
---
---@see UnsyncedRead.GetVisibleUnits
---@return number[] unitIDs
function Spring.GetAllUnits() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2453-L2458" target="_blank">source</a>]
---
---@param teamID integer
---@return number[]? unitIDs
function Spring.GetTeamUnits(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2553-L2558" target="_blank">source</a>]
---
---@param teamID integer
---@return table<integer,integer> unitsByDef A table where keys are unitDefIDs and values are unitIDs
function Spring.GetTeamUnitsSorted(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2649-L2654" target="_blank">source</a>]
---
---@param teamID integer
---@return table<number,number>? countByUnit A table where keys are unitDefIDs and values are counts.
function Spring.GetTeamUnitsCounts(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2732-L2738" target="_blank">source</a>]
---
---@param teamID integer
---@param unitDefIDs number|number[]
---@return number[]? unitIDs
function Spring.GetTeamUnitsByDefs(teamID, unitDefIDs) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2808-L2814" target="_blank">source</a>]
---
---@param teamID integer
---@param unitDefID integer
---@return number? count
function Spring.GetTeamUnitDefCount(teamID, unitDefID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2869-L2874" target="_blank">source</a>]
---
---@param teamID integer
---@return number? count
function Spring.GetTeamUnitCount(teamID) end

---Spatial unit queries
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2904-L2910" target="_blank">source</a>]
---
---@section spatial_unit_queries
---
---For the allegiance parameters: AllUnits = -1, MyUnits = -2, AllyUnits = -3, EnemyUnits = -4

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L2982-L2991" target="_blank">source</a>]
---
---@param xmin number
---@param zmin number
---@param xmax number
---@param zmax number
---@param allegiance number?
---@return number[] unitIDs
function Spring.GetUnitsInRectangle(xmin, zmin, xmax, zmax, allegiance) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3048-L3059" target="_blank">source</a>]
---
---@param xmin number
---@param ymin number
---@param zmin number
---@param xmax number
---@param ymax number
---@param zmax number
---@param allegiance number?
---@return number[] unitIDs
function Spring.GetUnitsInBox(xmin, ymin, zmin, xmax, ymax, zmax, allegiance) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3118-L3125" target="_blank">source</a>]
---
---@param x number
---@param z number
---@param radius number
---@return number[] unitIDs
function Spring.GetUnitsInCylinder(x, z, radius) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3180-L3188" target="_blank">source</a>]
---
---@param x number
---@param y number
---@param z number
---@param radius number
---@return number[] unitIDs
function Spring.GetUnitsInSphere(x, y, z, radius) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3263-L3270" target="_blank">source</a>]
---
---@class Plane
---@x_helper
---@field normalVecX number
---@field normalVecY number
---@field normalVecZ number
---@field d number
local Plane = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3272-L3287" target="_blank">source</a>]
---
---Plane normals point towards accepted space, so the acceptance criteria for each plane is:
---
---```
---radius     = unit radius
---px, py, pz = unit position
---[(nx * px) + (ny * py) + (nz * pz) + (d - radius)]  <=  0
---```
---
---@param planes Plane[]
---@param allegiance integer?
---@return integer[] unitIDs
function Spring.GetUnitsInPlanes(planes, allegiance) end

---Returns the centroid of an array of units
---
---Returns nil for an empty array
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3406-L3415" target="_blank">source</a>]
---
---@param units table { unitID, unitID, ... }
---@return number centerX
---@return number centerY
---@return number centerZ
function Spring.GetUnitArrayCentroid(units) end

---Returns the centroid of a map of units
---
---Returns nil for an empty map
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3421-L3430" target="_blank">source</a>]
---
---@param units table { [unitID] = true, [unitID] = true, ... }
---@return number centerX
---@return number centerY
---@return number centerZ
function Spring.GetUnitMapCentroid(units) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3437-L3443" target="_blank">source</a>]
---
---@param unitID integer
---@param range number? (Default: `1.0e9`)
---@return integer? unitID
function Spring.GetUnitNearestAlly(unitID, range) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3462-L3469" target="_blank">source</a>]
---
---@param unitID integer
---@param range number? (Default: `1.0e9`)
---@param useLOS boolean? (Default: `true`)
---@return integer? unitID
function Spring.GetUnitNearestEnemy(unitID, range, useLOS) end

---Spatial feature queries
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3496-L3500" target="_blank">source</a>]
---
---@section spatial_feature_queries

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3533-L3541" target="_blank">source</a>]
---
---@param xmin number
---@param zmin number
---@param xmax number
---@param zmax number
---@return number[] featureIDs
function Spring.GetFeaturesInRectangle(xmin, zmin, xmax, zmax) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3559-L3567" target="_blank">source</a>]
---
---@param x number
---@param y number
---@param z number
---@param radius number
---@return number[] featureIDs
function Spring.GetFeaturesInSphere(x, y, z, radius) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3584-L3592" target="_blank">source</a>]
---
---@param x number
---@param z number
---@param radius number
---@param allegiance number?
---@return number[] featureIDs
function Spring.GetFeaturesInCylinder(x, z, radius, allegiance) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3652-L3662" target="_blank">source</a>]
---
---@param xmin number
---@param zmin number
---@param xmax number
---@param zmax number
---@param excludeWeaponProjectiles boolean? (Default: `false`)
---@param excludePieceProjectiles boolean? (Default: `false`)
---@return number[] projectileIDs
function Spring.GetProjectilesInRectangle(xmin, zmin, xmax, zmax, excludeWeaponProjectiles, excludePieceProjectiles) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3682-L3692" target="_blank">source</a>]
---
---@param x number
---@param y number
---@param z number
---@param radius number
---@param excludeWeaponProjectiles boolean? (Default: false)
---@param excludePieceProjectiles boolean? (Default: false)
---@return number[] projectileIDs
function Spring.GetProjectilesInSphere(x, y, z, radius, excludeWeaponProjectiles, excludePieceProjectiles) end

---Unit state
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3707-L3711" target="_blank">source</a>]
---
---@section unit_state

---Get whether a unitID is valid
---
---Dead units are not valid.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3714-L3721" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean
function Spring.ValidUnitID(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3729-L3741" target="_blank">source</a>]
---
---@class UnitState
---@x_helper
---@field firestate number
---@field movestate number
---@field ["repeat"] boolean
---@field cloak boolean
---@field active boolean
---@field trajectory boolean
---@field autoland boolean?
---@field autorepairlevel number?
---@field loopbackattack boolean?
local UnitState = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3744-L3749" target="_blank">source</a>]
---
---@param unitID integer
---@return UnitState
function Spring.GetUnitStates(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3837-L3843" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean? armored
---@return number armorMultiple
function Spring.GetUnitArmored(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3856-L3861" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean? isActive
function Spring.GetUnitIsActive(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3873-L3878" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean? isCloaked
function Spring.GetUnitIsCloaked(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3890-L3895" target="_blank">source</a>]
---
---@param unitID integer
---@return number? seismicSignature
function Spring.GetUnitSeismicSignature(unitID) end

---Get whether unit leaves static radar ghosts.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3906-L3911" target="_blank">source</a>]
---
---@number unitID
---@return number?
function Spring.GetUnitLeavesGhost() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3922-L3927" target="_blank">source</a>]
---
---@param unitID integer
---@return integer? selfDTime
function Spring.GetUnitSelfDTime(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3939-L3946" target="_blank">source</a>]
---
---@param unitID integer
---@return integer? numStockpiled
---@return integer? numStockpileQued
---@return number? buildPercent
function Spring.GetUnitStockpile(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L3963-L3969" target="_blank">source</a>]
---
---@param unitID integer
---@param type string one of los, airLos, radar, sonar, seismic, radarJammer, sonarJammer
---@return number? radius
function Spring.GetUnitSensorRadius(unitID, type) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4006-L4019" target="_blank">source</a>]
---
---@param unitID integer
---@param allyTeamID integer?
---@return number? posErrorVectorX
---@return number posErrorVectorY
---@return number posErrorVectorZ
---@return number posErrorDeltaX
---@return number posErrorDeltaY
---@return number posErrorDeltaZ
---@return number nextPosErrorUpdatebaseErrorMult
---@return boolean posErrorBit
function Spring.GetUnitPosErrorParams(unitID, allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4043-L4048" target="_blank">source</a>]
---
---@param unitID integer
---@return string?
function Spring.GetUnitTooltip(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4083-L4088" target="_blank">source</a>]
---
---@param unitID integer
---@return number?
function Spring.GetUnitDefID(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4108-L4113" target="_blank">source</a>]
---
---@param unitID integer
---@return number?
function Spring.GetUnitTeam(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4125-L4130" target="_blank">source</a>]
---
---@param unitID integer
---@return number?
function Spring.GetUnitAllyTeam(unitID) end

---Checks if a unit is neutral (NOT Gaia!)
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4142-L4151" target="_blank">source</a>]
---
---Note that a "neutral" unit can belong to any ally-team (ally, enemy, Gaia).
---To check if a unit is Gaia, check its owner team.
---
---@param unitID integer
---@return boolean?
function Spring.GetUnitNeutral(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4163-L4172" target="_blank">source</a>]
---
---@param unitID integer
---@return number? health
---@return number maxHealth
---@return number paralyzeDamage
---@return number captureProgress
---@return number buildProgress between 0.0-1.0
function Spring.GetUnitHealth(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4202-L4207" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean?
function Spring.GetUnitIsDead(unitID) end

---Checks whether a unit is disabled and can't act
---
---The first return value is a simple OR of the following ones,
---any of those conditions is sufficient to disable the unit.
---
---Note that EMP and being transported are mechanically the same and thus lumped together.
---Use other callouts to differentiate them if you need to.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4219-L4232" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean? stunnedOrBuilt unit is disabled
---@return boolean stunned unit is either stunned via EMP or being transported by a non-fireplatform
---@return boolean beingBuilt unit is under construction
function Spring.GetUnitIsStunned(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4246-L4252" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean beingBuilt
---@return number buildProgress
function Spring.GetUnitIsBeingBuilt(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4264-L4272" target="_blank">source</a>]
---
---@param unitID integer
---@return number? metalMake
---@return number metalUse
---@return number energyMake
---@return number energyUse
function Spring.GetUnitResources(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4286-L4291" target="_blank">source</a>]
---
---@param unitID integer
---@return number Unit's metal storage
---@return number Unit's energy storage
function Spring.GetUnitStorage(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4304-L4310" target="_blank">source</a>]
---
---@param unitID integer
---@return number? buildTime
---@return number metalCost
---@return number energyCost
function Spring.GetUnitCosts(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4323-L4328" target="_blank">source</a>]
---
---@class ResourceCost
---@x_helper
---@field metal number
---@field energy number
local ResourceCost = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4330-L4335" target="_blank">source</a>]
---
---@param unitID integer
---@return ResourceCost? cost The cost of the unit, or `nil` if invalid.
---@return number? buildTime The build time the unit, or `nil` if invalid.
function Spring.GetUnitCostTable(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4353-L4358" target="_blank">source</a>]
---
---@param unitID integer
---@return number? metalExtraction
function Spring.GetUnitMetalExtraction(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4373-L4379" target="_blank">source</a>]
---
---@param unitID integer
---@return number xp [0.0; +∞)
---@return number limXp [0.0; 1.0) as experience approaches infinity
function Spring.GetUnitExperience(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4392-L4397" target="_blank">source</a>]
---
---@param unitID integer
---@return number?
function Spring.GetUnitHeight(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4409-L4414" target="_blank">source</a>]
---
---@param unitID integer
---@return number?
function Spring.GetUnitRadius(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4425-L4431" target="_blank">source</a>]
---
---Gets the unit's radius for when targeted by build, repair, reclaim-type commands.
---
---@param unitID integer
---@return number?
function Spring.GetUnitBuildeeRadius(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4442-L4447" target="_blank">source</a>]
---
---@param unitID integer
---@return number?
function Spring.GetUnitMass(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4453-L4468" target="_blank">source</a>]
---
---@param unitID integer
---@param midPos boolean? (Default: `false`) return midpoint as well
---@param aimPos boolean? (Default: `false`) return aimpoint as well
---@return number? basePointX
---@return number basePointY
---@return number basePointZ
---@return number? midPointX
---@return number midPointY
---@return number midPointZ
---@return number? aimPointX
---@return number aimPointY
---@return number aimPointZ
function Spring.GetUnitPosition(unitID, midPos, aimPos) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4474-L4483" target="_blank">source</a>]
---
---The same as `Spring.GetUnitPosition`, but without the optional midpoint calculations.
---
---@see Spring.GetUnitPosition
---@param unitID integer
---@return number? posX
---@return number? posY
---@return number? posZ
function Spring.GetUnitBasePosition(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4490-L4497" target="_blank">source</a>]
---
---@param unitID integer
---@return float3? front
---@return float3 up
---@return float3 right
function Spring.GetUnitVectors(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4518-L4526" target="_blank">source</a>]
---
---Note: PYR order
---
---@param unitID integer
---@return number pitch Rotation in X axis
---@return number yaw Rotation in Y axis
---@return number roll Rotation in Z axis
function Spring.GetUnitRotation(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4533-L4546" target="_blank">source</a>]
---
---@param unitID integer
---@return number frontDirX
---@return number frontDirY
---@return number frontDirZ
---@return number rightDirX
---@return number rightDirY
---@return number rightDirZ
---@return number upDirX
---@return number upDirY
---@return number upDirZ
function Spring.GetUnitDirection(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4570-L4576" target="_blank">source</a>]
---
---@param unitID integer
---@param convertToRadians boolean? (Default: `false`)
---@return number heading
function Spring.GetUnitHeading(unitID, convertToRadians) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4593-L4597" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitVelocity(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4604-L4608" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitBuildFacing(unitID) end

---Checks whether a unit is currently building another (NOT for checking if it's a structure)
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4620-L4628" target="_blank">source</a>]
---
---Works for both mobile builders and factories.
---
---@param unitID integer
---@return integer buildeeUnitID or nil
function Spring.GetUnitIsBuilding(unitID) end

---Checks a builder's current task
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4708-L4726" target="_blank">source</a>]
---
---Checks what a builder is currently doing. This is not the same as `Spring.GetUnitCurrentCommand`,
---because you can have a command at the front of the queue and not be doing it (for example because
---the target is still too far away), and on the other hand you can also be doing a task despite not
---having it in front of the queue (for example you're Guarding another builder who does). Also, it
---resolves the Repair command into either actual repair, or construction assist (in which case it
---returns the appropriate "build" command). Only build-related commands are returned (no Move or any
---custom commands).
---
---The possible commands returned are repair, reclaim, resurrect, capture, restore,
---and build commands (negative buildee unitDefID).
---
---@param unitID integer
---@return integer cmdID of the relevant command
---@return integer targetID if applicable (all except RESTORE)
function Spring.GetUnitWorkerTask(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4742-L4749" target="_blank">source</a>]
---
---Useful for setting move goals manually.
---
---@param unitID integer
---@param buildeeDefID integer or nil
---@return number effectiveBuildRange counted to the center of prospective buildee; buildRange if buildee nil
function Spring.GetUnitEffectiveBuildRange(unitID, buildeeDefID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4798-L4802" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitCurrentBuildPower(unitID) end

---Get a unit's carried resources
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4831-L4842" target="_blank">source</a>]
---
---Checks resources being carried internally by the unit.
---
---@param unitID integer
---@return number storedMetal
---@return number maxStoredMetal
---@return number storedEnergy
---@return number maxStoredEnergy
function Spring.GetUnitHarvestStorage(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4856-L4860" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitBuildParams(unitID) end

---Is builder in build stance
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4889-L4898" target="_blank">source</a>]
---
---Checks if a builder is in build stance, i.e. can create nanoframes.
---Returns nil for non-builders.
---
---@param unitID integer
---@return boolean inBuildStance
function Spring.GetUnitInBuildStance(unitID) end

---Get construction FX attachment points
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4915-L4928" target="_blank">source</a>]
---
---Returns an array of pieces which represent construction
---points. Default engine construction FX (nano spray) will
---originate there.
---
---Only works on builders and factories, returns nil (NOT empty table)
---for other units.
---
---@param unitID integer
---@return integer[] pieceArray
function Spring.GetUnitNanoPieces(unitID) end

---Get the transport carrying the unit
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4970-L4979" target="_blank">source</a>]
---
---Returns the unit ID of the transport, if any.
---Returns nil if the unit is not being transported.
---
---@param unitID integer
---@return integer? transportUnitID
function Spring.GetUnitTransporter(unitID) end

---Get units being transported
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L4994-L5001" target="_blank">source</a>]
---
---@param unitID integer
---@return integer[]? transporteeArray
---An array of unitIDs being transported by this unit, or `nil` if not a transport.
function Spring.GetUnitIsTransporting(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5023-L5030" target="_blank">source</a>]
---
---@param unitID integer
---@param weaponNum number? Optional if the unit has just one shield
---@return number isEnabled Warning, number not boolean. 0 or 1
---@return number currentPower
function Spring.GetUnitShieldState(unitID, weaponNum) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5055-L5059" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitFlanking(unitID) end

---Get a unit's engagement range
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5114-L5124" target="_blank">source</a>]
---
---Returns the range at which a unit will stop to engage.
---By default this is the highest among the unit's weapon ranges (hence name),
---but can be changed dynamically. Also note that unarmed units ignore this.
---
---@param unitID integer
---@return number maxRange
function Spring.GetUnitMaxRange(unitID) end

---Unit weapon state
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5136-L5140" target="_blank">source</a>]
---
---@section unit_weapon_state

---Check the state of a unit's weapon
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5143-L5174" target="_blank">source</a>]
---
---Available states to poll:
---  "reloadFrame" (frame on which the weapon will be ready to fire),
---  "reloadSpeed" (reload time in seconds),
---  "range" (in elmos),
---  "autoTargetRangeBoost" (predictive aiming range buffer, in elmos),
---  "projectileSpeed" (in elmos/frame),
---  "reloadTimeXP" (reload time after XP bonus, in seconds),
---  "reaimTime" (frames between AimWeapon calls),
---  "burst" (shots in a burst),
---  "burstRate" (delay between shots in a burst, in seconds),
---  "projectiles" (projectiles per shot),
---  "salvoLeft" (shots remaining in ongoing burst),
---  "nextSalvo" (simframe of the next shot in an ongoing burst),
---  "accuracy" (INaccuracy after XP bonus),
---  "sprayAngle" (spray angle after XP bonus),
---  "targetMoveError" (extra inaccuracy against moving targets, after XP bonus)
---  "avoidFlags" (bitmask for targeting avoidance),
---  "ttl" (number of seconds a projectile should live)
---  "collisionFlags" (bitmask for collisions).
---
---The state "salvoError" is an exception and returns a table: {x, y, z},
---which represents the inaccuracy error of the ongoing burst.
---
---@param unitID integer
---@param weaponNum number
---@param stateName string
---@return number stateValue
function Spring.GetUnitWeaponState(unitID, weaponNum, stateName) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5353-L5357" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitWeaponDamages(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5392-L5396" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitWeaponVectors(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5432-L5436" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitWeaponTryTarget(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5477-L5481" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitWeaponTestTarget(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5515-L5519" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitWeaponTestRange(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5553-L5557" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitWeaponHaveFreeLineOfFire(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5619-L5623" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitWeaponCanFire(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5644-L5650" target="_blank">source</a>]
---
---@alias TargetType
---| 0 # none
---| 1 # unit
---| 2 # position
---| 3 # projectile

---Checks a weapon's target
---
---Note that this doesn't need to reflect the unit's Attack orders or such, and
---that weapons can aim individually unless slaved.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5652-L5663" target="_blank">source</a>]
---
---@param unitID integer
---@param weaponNum integer
---@return 0 TargetType none
---@return boolean isUserTarget
function Spring.GetUnitWeaponTarget(unitID, weaponNum) end

---Checks a weapon's target
---
---Note that this doesn't need to reflect the unit's Attack orders or such, and
---that weapons can aim individually unless slaved.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5664-L5676" target="_blank">source</a>]
---
---@param unitID integer
---@param weaponNum integer
---@return 1 TargetType unit
---@return boolean isUserTarget
---@return integer targetUnitID
function Spring.GetUnitWeaponTarget(unitID, weaponNum) end

---Checks a weapon's target
---
---Note that this doesn't need to reflect the unit's Attack orders or such, and
---that weapons can aim individually unless slaved.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5677-L5689" target="_blank">source</a>]
---
---@param unitID integer
---@param weaponNum integer
---@return 2 TargetType position
---@return boolean isUserTarget
---@return float3 targetPosition
function Spring.GetUnitWeaponTarget(unitID, weaponNum) end

---Checks a weapon's target
---
---Note that this doesn't need to reflect the unit's Attack orders or such, and
---that weapons can aim individually unless slaved.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5690-L5702" target="_blank">source</a>]
---
---@param unitID integer
---@param weaponNum integer
---@return 3 TargetType projectileID
---@return boolean isUserTarget
---@return integer targetProjectileId
function Spring.GetUnitWeaponTarget(unitID, weaponNum) end

---Misc
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5748-L5752" target="_blank">source</a>]
---
---@section misc

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5759-L5763" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitEstimatedPath(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5779-L5783" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitLastAttacker(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5799-L5803" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitLastAttackedPiece(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5809-L5813" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitCollisionVolumeData(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5830-L5838" target="_blank">source</a>]
---
---@param unitID1 number
---@param unitID2 number
---@param direction boolean? (Default: `false`) to subtract from, default unitID1 - unitID2
---@param subtractRadii boolean? (Default: `false`) whether units radii should be subtracted from the total
---@return number?
function Spring.GetUnitSeparation(unitID1, unitID2, direction, subtractRadii) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5872-L5876" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitFeatureSeparation(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5906-L5920" target="_blank">source</a>]
---
---@class UnitDefDimensions
---@x_helper
---@field height number
---@field radius number
---@field midx number
---@field minx number
---@field maxx number
---@field midy number
---@field miny number
---@field maxy number
---@field midz number
---@field minz number
---@field maxz number
local UnitDefDimensions = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5922-L5927" target="_blank">source</a>]
---
---@param unitDefID integer
---@return UnitDefDimensions? dimensions
function Spring.GetUnitDefDimensions(unitDefID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5957-L5960" target="_blank">source</a>]
function Spring.GetCEGID() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5968-L5979" target="_blank">source</a>]
---
---@param unitID integer
---@return boolean? isBlocking
---@return boolean isSolidObjectCollidable
---@return boolean isProjectileCollidable
---@return boolean isRaySegmentCollidable
---@return boolean crushable
---@return boolean blockEnemyPushing
---@return boolean blockHeightChanges
function Spring.GetUnitBlocking(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L5986-L5990" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitMoveTypeData(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6175-L6181" target="_blank">source</a>]
---
---@class Command
---@x_helper
---@field id integer
---@field params number[]?
---@field options CommandOptions?
local Command = {}

---Get a command from a units command queue.
---
---For factories, this function uses the command queue automatically assigned to new units.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6219-L6234" target="_blank">source</a>]
---
---@see Spring.GetFactoryCommands for getting factory build queue commands
---@param unitID integer unitID when invalid this function returns nil.
---@param cmdIndex integer? (Default: `0`) Command index to get. If negative will count from the end of the queue, e.g. -1 will be the last command.
---@return CMD? cmdID
---@return integer|CommandOptionBit|nil options
---@return integer|nil tag
---@return number? ... Command parameters.
function Spring.GetUnitCurrentCommand(unitID, cmdIndex) end

---Get the commands for a unit.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6271-L6281" target="_blank">source</a>]
---
---Same as `Spring.GetCommandQueue`
---
---@param unitID integer
---@param count integer Maximum amount of commands to return, `-1` returns all commands.
---@return Command[] commands
function Spring.GetUnitCommands(unitID, count) end

---Get the count of commands for a unit.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6282-L6291" target="_blank">source</a>]
---
---@deprecated This overload is deprecated, use `Spring.GetUnitCommandCount(unitId)` instead.
---@param unitID integer
---@param count 0 Returns the number of commands in the units queue.
---@return integer The number of commands in the unit queue.
function Spring.GetUnitCommands(unitID, count) end

---Get the number or list of commands for a factory
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6319-L6329" target="_blank">source</a>]
---
---@param unitID integer
---@param count integer Maximum amount of commands to return, `-1` returns all commands.
---@return Command[] commands
---@see Spring.GetFactoryCommandCount to get the count of commands.
---@see Spring.GetFactoryCounts to get command counts grouped by cmdID.
function Spring.GetFactoryCommands(unitID, count) end

---Get the count of commands for a factory.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6330-L6341" target="_blank">source</a>]
---
---@deprecated This overload is deprecated, use `Spring.GetFactoryCommandCount(unitId)` instead.
---@param unitID integer
---@param count 0 Returns the number of commands in the factory queue.
---@return integer The number of commands in the factory queue.
---@see Spring.GetFactoryCommandCount for replacement function.
function Spring.GetFactoryCommands(unitID, count) end

---Get the number of commands in a unit's queue.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6371-L6376" target="_blank">source</a>]
---
---@param unitID integer
---@return integer The number of commands in the unit's queue.
function Spring.GetUnitCommandCount(unitID) end

---Get the number of commands in a factory queue.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6394-L6402" target="_blank">source</a>]
---
---@param unitID integer
---@return integer The number of commands in the factory queue.
---@see Spring.GetFactoryCommands to get the factory commands.
---@see Spring.GetFactoryCounts to get command counts grouped by cmdID.
function Spring.GetFactoryCommandCount(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6424-L6428" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetFactoryBuggerOff(unitID) end

---Gets the build queue of a factory
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6504-L6512" target="_blank">source</a>]
---
---@param unitID integer
---@param count integer? (Default: `-1`) Number of commands to retrieve, `-1` for all.
---@param addCmds boolean? (Default: `false`) Retrieve commands other than buildunit
---@return table<number,number>? counts Build queue count by `unitDefID` or `-cmdID`, or `nil` if unit is not found.
function Spring.GetFactoryCounts(unitID, count, addCmds) end

---Get the commands for a unit.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6540-L6551" target="_blank">source</a>]
---
---Same as `Spring.GetUnitCommands`
---
---@deprecated Use Spring.GetUnitCommands instead.
---@param unitID integer
---@param count integer Number of commands to return, `-1` returns all commands, `0` returns command count.
---@return Command[] commands
function Spring.GetCommandQueue(unitID, count) end

---Get the count of commands for a unit.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6552-L6564" target="_blank">source</a>]
---
---Same as `Spring.GetUnitCommands`
---
---@deprecated Use Spring.GetUnitCommandCount instead.
---@param unitID integer
---@param count 0 Returns the number of commands in the units queue.
---@return integer cmdCount The number of commands in the unit queue.
function Spring.GetCommandQueue(unitID, count) end

---Returns the build queue
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6645-L6650" target="_blank">source</a>]
---
---@param unitID integer
---@return table<number,number>? buildqueue indexed by unitDefID with count values
function Spring.GetFullBuildQueue(unitID) end

---Returns the build queue cleaned of things the unit can't build itself
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6657-L6662" target="_blank">source</a>]
---
---@param unitID integer
---@return table<number,number>? buildqueue indexed by unitDefID with count values
function Spring.GetRealBuildQueue(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6672-L6676" target="_blank">source</a>]
---
---@param unitID integer
function Spring.GetUnitCmdDescs(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6711-L6715" target="_blank">source</a>]
---
---@param unitID integer
function Spring.FindUnitCmdDesc(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6738-L6743" target="_blank">source</a>]
---
---@param featureID integer
---@return boolean
function Spring.ValidFeatureID(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6751-L6754" target="_blank">source</a>]
---
---@return integer[] featureIDs
function Spring.GetAllFeatures() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6779-L6784" target="_blank">source</a>]
---
---@param featureID integer
---@return number?
function Spring.GetFeatureDefID(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6796-L6801" target="_blank">source</a>]
---
---@param featureID integer
---@return number?
function Spring.GetFeatureTeam(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6817-L6822" target="_blank">source</a>]
---
---@param featureID integer
---@return number?
function Spring.GetFeatureAllyTeam(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6834-L6841" target="_blank">source</a>]
---
---@param featureID integer
---@return number? health
---@return number defHealth
---@return number resurrectProgress
function Spring.GetFeatureHealth(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6855-L6860" target="_blank">source</a>]
---
---@param featureID integer
---@return number?
function Spring.GetFeatureHeight(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6872-L6877" target="_blank">source</a>]
---
---@param featureID integer
---@return number?
function Spring.GetFeatureRadius(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6888-L6893" target="_blank">source</a>]
---
---@param featureID integer
---@return number?
function Spring.GetFeatureMass(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6899-L6906" target="_blank">source</a>]
---
---@param featureID integer
---@return number? x
---@return number? y
---@return number? z
function Spring.GetFeaturePosition(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6913-L6920" target="_blank">source</a>]
---
---@param featureID1 number
---@param featureID2 number
---@param direction boolean? (Default: `false`) to subtract from, default featureID1 - featureID2
---@return number?
function Spring.GetFeatureSeparation(featureID1, featureID2, direction) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6945-L6953" target="_blank">source</a>]
---
---Note: PYR order
---
---@param featureID integer
---@return number? pitch Rotation in X axis
---@return number? yaw Rotation in Y axis
---@return number? roll Rotation in Z axis
function Spring.GetFeatureRotation(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L6963-L6976" target="_blank">source</a>]
---
---@param featureID integer
---@return number? frontDirX
---@return number? frontDirY
---@return number? frontDirZ
---@return number? rightDirX
---@return number? rightDirY
---@return number? rightDirZ
---@return number? upDirX
---@return number? upDirY
---@return number? upDirZ
function Spring.GetFeatureDirection(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7004-L7013" target="_blank">source</a>]
---
---Returns nil if no feature found with ID.
---
---@param featureID integer
---@return number? x
---@return number? y
---@return number? z
---@return number? w
function Spring.GetFeatureVelocity(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7020-L7024" target="_blank">source</a>]
---
---@param featureID integer
function Spring.GetFeatureHeading(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7036-L7046" target="_blank">source</a>]
---
---@param featureID integer
---@return number? metal
---@return number defMetal
---@return number energy
---@return number defEnergy
---@return number reclaimLeft
---@return number reclaimTime
function Spring.GetFeatureResources(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7063-L7074" target="_blank">source</a>]
---
---@param featureID integer
---@return boolean? isBlocking
---@return boolean? isSolidObjectCollidable
---@return boolean? isProjectileCollidable
---@return boolean? isRaySegmentCollidable
---@return boolean? crushable
---@return boolean? blockEnemyPushing
---@return boolean? blockHeightChanges
function Spring.GetFeatureBlocking(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7081-L7086" target="_blank">source</a>]
---
---@param featureID integer
---@return boolean?
function Spring.GetFeatureNoSelect(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7099-L7106" target="_blank">source</a>]
---
---Returns nil if no feature found with ID.
---
---@param featureID integer
---@return string|""|nil featureDefName
---@return FacingInteger buildFacing facing of footprint, 0 - 3
function Spring.GetFeatureResurrect(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7125-L7131" target="_blank">source</a>]
---
---@param featureID integer
---@return string|""|nil Last hit piece name
---@return integer? frame it was last hit on, nil when featureID is not valid
function Spring.GetFeatureLastAttackedPiece(featureID) end

---Parameters related to a collision volume.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7137-L7153" target="_blank">source</a>]
---
---@class CollisionVolumeData
---@x_helper
---@field type "ellipsoid"|"cylinder"|"box"|"sphere" type
---@field scaleX number
---@field scaleY number
---@field scaleZ number
---@field offsetX number
---@field offsetY number
---@field offsetZ number
---@field boundingRadius number
---@field defaultToSphere boolean
---@field defaultToFootPrint boolean
---@field defaultToPieceTree boolean
local CollisionVolumeData = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7155-L7160" target="_blank">source</a>]
---
---@param featureID integer
---@return CollisionVolumeData?
function Spring.GetFeatureCollisionVolumeData(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7171-L7176" target="_blank">source</a>]
---
---@param featureID integer
---@return CollisionVolumeData?
function Spring.GetFeaturePieceCollisionVolumeData(featureID) end

---Get the feature current fire timer.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7183-L7189" target="_blank">source</a>]
---
---@param featureID integer
---@return number? fireTime in seconds, nil when featureID is invalid.
function Spring.GetFeatureFireTime(featureID) end

---Get the feature current smoke timer.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7202-L7208" target="_blank">source</a>]
---
---@param featureID integer
---@return number? smokeTime in seconds, nil when featureID is invalid.
function Spring.GetFeatureSmokeTime(featureID) end

---Projectile state
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7221-L7225" target="_blank">source</a>]
---
---@section projectile_state

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7228-L7235" target="_blank">source</a>]
---
---@param projectileID integer
---@return number? posX
---@return number? posY
---@return number? posZ
function Spring.GetProjectilePosition(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7249-L7256" target="_blank">source</a>]
---
---@param projectileID integer
---@return number? dirX
---@return number? dirY
---@return number? dirZ
function Spring.GetProjectileDirection(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7270-L7278" target="_blank">source</a>]
---
---@param projectileID integer
---@return number? velX
---@return number? velY
---@return number? velZ
---@return number? velW
function Spring.GetProjectileVelocity(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7285-L7290" target="_blank">source</a>]
---
---@param projectileID integer
---@return number?
function Spring.GetProjectileGravity(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7304-L7314" target="_blank">source</a>]
---
---@param projectileID integer
---@return number? explosionFlags encoded bitwise with SHATTER = 1, EXPLODE = 2, EXPLODE_ON_HIT = 2, FALL = 4, SMOKE = 8, FIRE = 16, NONE = 32, NO_CEG_TRAIL = 64, NO_HEATCLOUD = 128
---@return number spinAngle
---@return number spinSpeed
---@return number spinVectorX
---@return number spinVectorY
---@return number spinVectorZ
function Spring.GetPieceProjectileParams(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7334-L7344" target="_blank">source</a>]
---
---@param projectileID integer
---@return number? targetTypeInt where
---string.byte('g') := GROUND
---string.byte('u') := UNIT
---string.byte('f') := FEATURE
---string.byte('p') := PROJECTILE
---@return number|float3 target targetID or targetPos when targetTypeInt == string.byte('g')
function Spring.GetProjectileTarget(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7386-L7391" target="_blank">source</a>]
---
---@param projectileID integer
---@return boolean?
function Spring.GetProjectileIsIntercepted(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7406-L7411" target="_blank">source</a>]
---
---@param projectileID integer
---@return number?
function Spring.GetProjectileTimeToLive(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7426-L7431" target="_blank">source</a>]
---
---@param projectileID integer
---@return number?
function Spring.GetProjectileOwnerID(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7448-L7453" target="_blank">source</a>]
---
---@param projectileID integer
---@return number?
function Spring.GetProjectileTeamID(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7469-L7474" target="_blank">source</a>]
---
---@param projectileID integer
---@return number?
function Spring.GetProjectileAllyTeamID(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7490-L7496" target="_blank">source</a>]
---
---@param projectileID integer
---@return boolean? weapon
---@return boolean piece
function Spring.GetProjectileType(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7510-L7518" target="_blank">source</a>]
---
---Using this to get a weaponDefID is HIGHLY preferred to indexing WeaponDefNames via GetProjectileName
---
---@param projectileID integer
---@return number?
function Spring.GetProjectileDefID(projectileID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7539-L7560" target="_blank">source</a>]
---
---@param projectileID integer
---@param tag string one of:
---    "paralyzeDamageTime"
---    "impulseFactor"
---    "impulseBoost"
---    "craterMult"
---    "craterBoost"
---    "dynDamageExp"
---    "dynDamageMin"
---    "dynDamageRange"
---    "dynDamageInverted"
---    "craterAreaOfEffect"
---    "damageAreaOfEffect"
---    "edgeEffectiveness"
---    "explosionSpeed"
---    - or -
---    an armor type index to get the damage against it.
---@return number?
function Spring.GetProjectileDamages(projectileID, tag) end

---Ground
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7580-L7584" target="_blank">source</a>]
---
---@section ground

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7587-L7594" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return boolean inPlayArea whether the position is in the active play area
---@return boolean inMap whether the position is in the full map area (currently this is the same as above)
function Spring.IsPosInMap(x, z) end

---Get ground height
---
---On sea, this returns the negative depth of the seafloor
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7628-L7636" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return number
function Spring.GetGroundHeight(x, z) end

---Get water plane height
---
---Water may at some point become shaped (rivers etc) but for now it is always a flat plane.
---Use this function instead of GetWaterLevel to denote you are relying on that assumption.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7645-L7653" target="_blank">source</a>]
---
---@see Spring.GetWaterLevel
---@return number waterPlaneLevel
function Spring.GetWaterPlaneLevel() end

---Get water level in a specific position
---
---Water is currently a flat plane, so this returns the same value regardless of XZ.
---However water may become more dynamic at some point so by using this you are future-proof.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7660-L7669" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return number waterLevel
function Spring.GetWaterLevel(x, z) end

---Get ground height as it was at game start
---
---Returns the original height before the ground got deformed
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7679-L7687" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return number
function Spring.GetGroundOrigHeight(x, z) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7697-L7707" target="_blank">source</a>]
---
---@param x number
---@param z number
---@param smoothed boolean? (Default: `false`) raw or smoothed center normal
---@return number normalX
---@return number normalY
---@return number normalZ
---@return number slope
function Spring.GetGroundNormal(x, z, smoothed) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7727-L7743" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return number ix
---@return number iz
---@return number terrainTypeIndex
---@return string name
---@return number metalExtraction
---@return number hardness
---@return number tankSpeed
---@return number kbotSpeed
---@return number hoverSpeed
---@return number shipSpeed
---@return boolean receiveTracks
function Spring.GetGroundInfo(x, z) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7798-L7801" target="_blank">source</a>]
function Spring.GetGroundBlocked() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7843-L7850" target="_blank">source</a>]
---
---@return number initMinHeight
---@return number initMaxHeight
---@return number currMinHeight
---@return number currMaxHeight
function Spring.GetGroundExtremes() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7861-L7873" target="_blank">source</a>]
---
---@param terrainTypeInfo number
---@return number index
---@return string name
---@return number hardness
---@return number tankSpeed
---@return number kbotSpeed
---@return number hoverSpeed
---@return number shipSpeed
---@return boolean receiveTracks
function Spring.GetTerrainTypeData(terrainTypeInfo) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7885-L7891" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return number
function Spring.GetGrass(x, z) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7901-L7907" target="_blank">source</a>]
---
---@param x number
---@param z number
---@return number height
function Spring.GetSmoothMeshHeight(x, z) end

---Tests
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7918-L7922" target="_blank">source</a>]
---
---@section tests

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7925-L7939" target="_blank">source</a>]
---
---@param unitDefID integer
---@param posX number
---@param posY number
---@param posZ number
---@param dirX number? (Default: `0.0`)
---@param dirY number? (Default: `0.0`)
---@param dirZ number? (Default: `0.0`)
---@param testTerrain boolean? (Default: `true`)
---@param testObjects boolean? (Default: `true`)
---@param centerOnly boolean? (Default: `false`)
---@return boolean
function Spring.TestMoveOrder(unitDefID, posX, posY, posZ, dirX, dirY, dirZ, testTerrain, testObjects, centerOnly) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7982-L7988" target="_blank">source</a>]
---
---@alias BuildOrderBlockedStatus
---| 0 # blocked
---| 1 # mobile unit on the way
---| 2 # reclaimable
---| 3 # open

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L7990-L7999" target="_blank">source</a>]
---
---@param unitDefID integer
---@param x number
---@param y number
---@param z number
---@param facing Facing
---@return BuildOrderBlockedStatus blocking
---@return integer? featureID A reclaimable feature in the way.
function Spring.TestBuildOrder(unitDefID, x, y, z, facing) end

---Snaps a position to the building grid
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8040-L8051" target="_blank">source</a>]
---
---@param unitDefID integer
---@param posX number
---@param posY number
---@param posZ number
---@param buildFacing number? (Default: `0`) one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3
---@return number buildPosX
---@return number buildPosY
---@return number buildPosZ
function Spring.Pos2BuildPos(unitDefID, posX, posY, posZ, buildFacing) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8069-L8083" target="_blank">source</a>]
---
---@param teamID integer
---@param unitDefID integer
---@param posX number
---@param posY number
---@param posZ number
---@param searchRadius number
---@param minDistance number
---@param buildFacing number one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3
---@return number buildPosX
---@return number buildPosY
---@return number buildPosZ
function Spring.ClosestBuildPos(teamID, unitDefID, posX, posY, posZ, searchRadius, minDistance, buildFacing) end

---Visibility
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8104-L8108" target="_blank">source</a>]
---
---@section visibility

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8137-L8148" target="_blank">source</a>]
---
---@param posX number
---@param posY number
---@param posZ number
---@param allyTeamID integer?
---@return boolean inLosOrRadar
---@return boolean inLos
---@return boolean inRadar
---@return boolean inJammer
function Spring.GetPositionLosState(posX, posY, posZ, allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8177-L8185" target="_blank">source</a>]
---
---@param posX number
---@param posY number
---@param posZ number
---@param allyTeamID integer?
---@return boolean
function Spring.IsPosInLos(posX, posY, posZ, allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8203-L8211" target="_blank">source</a>]
---
---@param posX number
---@param posY number
---@param posZ number
---@param allyTeamID integer?
---@return boolean
function Spring.IsPosInRadar(posX, posY, posZ, allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8229-L8237" target="_blank">source</a>]
---
---@param posX number
---@param posY number
---@param posZ number
---@param allyTeamID integer?
---@return boolean
function Spring.IsPosInAirLos(posX, posY, posZ, allyTeamID) end

---Get unit los state (bitmask)
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8254-L8261" target="_blank">source</a>]
---
---@param unitID integer
---@param allyTeamID integer?
---@param raw true Return a bitmask.
---@return LosMask|integer? bitmask A bitmask of `LosMask` bits
function Spring.GetUnitLosState(unitID, allyTeamID, raw) end

---Get unit los state (table)
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8263-L8270" target="_blank">source</a>]
---
---@param unitID integer
---@param allyTeamID integer?
---@param raw false? Return a table.
---@return table<"los"|"radar"|"typed",boolean>? los A table of LOS state names as keys and booleans as values, or `nil` if `unitID` is invalid.
function Spring.GetUnitLosState(unitID, allyTeamID, raw) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8313-L8319" target="_blank">source</a>]
---
---@param unitID integer
---@param allyTeamID integer
---@return boolean inLos
function Spring.IsUnitInLos(unitID, allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8337-L8343" target="_blank">source</a>]
---
---@param unitID integer
---@param allyTeamID integer
---@return boolean inAirLos
function Spring.IsUnitInAirLos(unitID, allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8361-L8367" target="_blank">source</a>]
---
---@param unitID integer
---@param allyTeamID integer
---@return boolean inRadar
function Spring.IsUnitInRadar(unitID, allyTeamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8385-L8391" target="_blank">source</a>]
---
---@param unitID integer
---@param allyTeamID integer
---@return boolean inJammer
function Spring.IsUnitInJammer(unitID, allyTeamID) end

---Piece/Script
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8424-L8428" target="_blank">source</a>]
---
---@section piecescript

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8533-L8543" target="_blank">source</a>]
---
---@class PieceInfo
---@x_helper
---@field name string
---@field parent string
---@field children string[] names
---@field empty boolean
---@field min [number, number, number] (x,y,z)
---@field max [number, number, number] (x,y,z)
---@field offset [number, number, number] (x,y,z)
local PieceInfo = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8685-L8690" target="_blank">source</a>]
---
---@param modelName string
---@return number index of the root piece
function Spring.GetModelRootPiece(modelName) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8695-L8700" target="_blank">source</a>]
---
---@param modelName string
---@return table<string,number>? pieceInfos where keys are piece names and values are indices
function Spring.GetModelPieceMap(modelName) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8706-L8711" target="_blank">source</a>]
---
---@param modelName string
---@return string[]? pieceNames
function Spring.GetModelPieceList(modelName) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8717-L8722" target="_blank">source</a>]
---
---@param unitID integer
---@return number index of the root piece
function Spring.GetUnitRootPiece(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8727-L8732" target="_blank">source</a>]
---
---@param unitID integer
---@return table<string,number>? pieceInfos where keys are piece names and values are indices
function Spring.GetUnitPieceMap(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8738-L8743" target="_blank">source</a>]
---
---@param unitID integer
---@return string[] pieceNames
function Spring.GetUnitPieceList(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8749-L8755" target="_blank">source</a>]
---
---@param unitID integer
---@param pieceIndex integer
---@return PieceInfo? pieceInfo
function Spring.GetUnitPieceInfo(unitID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8761-L8772" target="_blank">source</a>]
---
---@param unitID integer
---@param pieceIndex integer
---@return number? posX
---@return number     posY
---@return number     posZ
---@return number     dirX
---@return number     dirY
---@return number     dirZ
function Spring.GetUnitPiecePosDir(unitID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8778-L8786" target="_blank">source</a>]
---
---@param unitID integer
---@param pieceIndex integer
---@return number? posX
---@return number     posY
---@return number     posZ
function Spring.GetUnitPiecePosition(unitID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8792-L8800" target="_blank">source</a>]
---
---@param unitID integer
---@param pieceIndex integer
---@return number? dirX
---@return number     dirY
---@return number     dirZ
function Spring.GetUnitPieceDirection(unitID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8806-L8826" target="_blank">source</a>]
---
---@param unitID integer
---@return number? m11
---@return number m12
---@return number m13
---@return number m14
---@return number m21
---@return number m22
---@return number m23
---@return number m24
---@return number m31
---@return number m32
---@return number m33
---@return number m34
---@return number m41
---@return number m42
---@return number m43
---@return number m44
function Spring.GetUnitPieceMatrix(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8831-L8836" target="_blank">source</a>]
---
---@param featureID integer
---@return number index of the root piece
function Spring.GetFeatureRootPiece(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8841-L8846" target="_blank">source</a>]
---
---@param featureID integer
---@return table<string,number> pieceInfos where keys are piece names and values are indices
function Spring.GetFeaturePieceMap(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8852-L8857" target="_blank">source</a>]
---
---@param featureID integer
---@return string[] pieceNames
function Spring.GetFeaturePieceList(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8863-L8869" target="_blank">source</a>]
---
---@param featureID integer
---@param pieceIndex integer
---@return PieceInfo? pieceInfo
function Spring.GetFeaturePieceInfo(featureID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8875-L8886" target="_blank">source</a>]
---
---@param featureID integer
---@param pieceIndex integer
---@return number? posX
---@return number     posY
---@return number     posZ
---@return number     dirX
---@return number     dirY
---@return number     dirZ
function Spring.GetFeaturePiecePosDir(featureID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8892-L8900" target="_blank">source</a>]
---
---@param featureID integer
---@param pieceIndex integer
---@return number? posX
---@return number     posY
---@return number     posZ
function Spring.GetFeaturePiecePosition(featureID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8906-L8914" target="_blank">source</a>]
---
---@param featureID integer
---@param pieceIndex integer
---@return number? dirX
---@return number     dirY
---@return number     dirZ
function Spring.GetFeaturePieceDirection(featureID, pieceIndex) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8920-L8940" target="_blank">source</a>]
---
---@param featureID integer
---@return number? m11
---@return number m12
---@return number m13
---@return number m14
---@return number m21
---@return number m22
---@return number m23
---@return number m24
---@return number m31
---@return number m32
---@return number m33
---@return number m34
---@return number m41
---@return number m42
---@return number m43
---@return number m44
function Spring.GetFeaturePieceMatrix(featureID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8945-L8951" target="_blank">source</a>]
---
---@param unitID integer
---@return integer[] pieceIndices
function Spring.GetUnitScriptPiece(unitID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8952-L8959" target="_blank">source</a>]
---
---@param unitID integer
---@param scriptPiece integer
---@return integer pieceIndex
function Spring.GetUnitScriptPiece(unitID, scriptPiece) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L8991-L8998" target="_blank">source</a>]
---
---@param unitID integer
---@return table<string,number> where keys are piece names and values are piece indices
function Spring.GetUnitScriptNames(unitID) end

---Checks for a ground collision in given direction
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L9034-L9052" target="_blank">source</a>]
---
---Checks if there is surface (ground, optionally water) towards a vector
---and returns the distance to the closest hit and its position, if any.
---
---@param posX number
---@param posY number
---@param posZ number
---@param dirX number
---@param dirY number
---@param dirZ number
---@param testWater boolean? (Default: `true`)
---@return number rayLength
---@return number posX
---@return number posY
---@return number posZ
function Spring.TraceRayGroundInDirection(posX, posY, posZ, dirX, dirY, dirZ, testWater) end

---Checks for a ground collision between two positions
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L9063-L9081" target="_blank">source</a>]
---
---Checks if there is surface (ground, optionally water) between two positions
---and returns the distance to the closest hit and its position, if any.
---
---@param startX number
---@param startY number
---@param startZ number
---@param endX number
---@param endY number
---@param endZ number
---@param testWater boolean? (Default: `true`)
---@return number rayLength
---@return number posX
---@return number posY
---@return number posZ
function Spring.TraceRayGroundBetweenPositions(startX, startY, startZ, endX, endY, endZ, testWater) end

---Misc
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L9094-L9098" target="_blank">source</a>]
---
---@section misc

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaSyncedRead.cpp#L9101-L9110" target="_blank">source</a>]
---
---@param allyTeamID integer
---@return number? radarErrorSize actual radar error size (when allyTeamID is allied to current team) or base radar error size
---@return number baseRadarErrorSize
---@return number baseRadarErrorMult
function Spring.GetRadarErrorParams(allyTeamID) end