---!!! DO NOT MANUALLY EDIT THIS FILE !!!
---Generated by lua-doc-extractor 3.3.2
---https://github.com/rhys-vdw/lua-doc-extractor
---
---Source: rts/Lua/LuaHandle.cpp
---
---@meta

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L82-L113" target="_blank">source</a>]
---
---@class Callins
---Functions called by the Engine.
---
---To use these callins in a widget, prepend `widget:` and, for a gadget,
---prepend `gadget:`. For example:
---
---```lua
---function widget:UnitCreated(unitID, unitDefID, unitTeam, builderID)
---  -- ...
---end
---```
---
---Some functions may differ between (synced) gadget and widgets. This is
---because all information should be available to synced (game logic
---controlling) gadgets, but restricted to unsynced gadget/widget. e.g.
---information about an enemy unit only detected via radar and not yet in LOS.
---
---In such cases the full (synced) param list is documented.
---
---**Attention:** Some callins will only work on the unsynced portion of the gadget.
---Due to the type-unsafe nature of lua parsing, those callins not firing up
---might be hard to trace.
---@see Gadget
---@see Widget
---@see Menu
---@see Intro
---@see SyncedCallins
---@see UnsyncedCallins
local Callins = {}

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L227-L230" target="_blank">source</a>]
---
---@param killMessage string? Kill message.
function Script.Kill(killMessage) end

---Common
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L516-L519" target="_blank">source</a>]
---
---@section common

---Called when the addon is (re)loaded.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L521-L524" target="_blank">source</a>]
function Callins:Initialize() end

---Called when the game is (re)loaded.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L526-L529" target="_blank">source</a>]
function Callins:LoadCode() end

---Called when the addon or the game is shutdown.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L581-L585" target="_blank">source</a>]
---
---@return nil
function Callins:Shutdown() end

---Called when a player issues a UI command e.g. types /foo or /luarules foo.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L603-L608" target="_blank">source</a>]
---
---@param msg string
---@param playerID integer
function Callins:GotChatMsg(msg, playerID) end

---Called after `GamePreload` and before `GameStart`. See Lua_SaveLoad.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L635-L639" target="_blank">source</a>]
---
---@param zipReader table
function Callins:Load(zipReader) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L683-L686" target="_blank">source</a>]
---
---@param name string
function Script.UpdateCallin(name) end

---Game
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L698-L700" target="_blank">source</a>]
---
---@section game

---Called before the 0 gameframe.
---
---Is not called when a saved game is loaded.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L702-L707" target="_blank">source</a>]
function Callins:GamePreload() end

---Called upon the start of the game.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L725-L730" target="_blank">source</a>]
---
---Is not called when a saved game is loaded.
function Callins:GameStart() end

---Called when the game ends
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L748-L752" target="_blank">source</a>]
---
---@param winningAllyTeams number[] list of winning allyTeams, if empty the game result was undecided (like when dropping from an host).
function Callins:GameOver(winningAllyTeams) end

---Called when the game is paused.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L775-L780" target="_blank">source</a>]
---
---@param playerID integer
---@param paused boolean
function Callins:GamePaused(playerID, paused) end

---Called for every game simulation frame (30 per second).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L825-L829" target="_blank">source</a>]
---
---@param frame number Starts at frame 1
function Callins:GameFrame(frame) end

---Called at the end of every game simulation frame
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L859-L863" target="_blank">source</a>]
---
---@param frame number Starts at frame 1
function Callins:GameFramePost(frame) end

---Called once to deliver the gameID
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L883-L887" target="_blank">source</a>]
---
---@param gameID string encoded in hex.
function Callins:GameID(gameID) end

---Teams
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L910-L912" target="_blank">source</a>]
---
---@section teams

---Called when a team dies (see `Spring.KillTeam`).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L914-L918" target="_blank">source</a>]
---
---@param teamID integer
function Callins:TeamDied(teamID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L938-L941" target="_blank">source</a>]
---
---@param teamID integer
function Callins:TeamChanged(teamID) end

---Called whenever a player's status changes e.g. becoming a spectator.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L961-L965" target="_blank">source</a>]
---
---@param playerID integer
function Callins:PlayerChanged(playerID) end

---Called whenever a new player joins the game.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L985-L989" target="_blank">source</a>]
---
---@param playerID integer
function Callins:PlayerAdded(playerID) end

---Called whenever a player is removed from the game.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1009-L1014" target="_blank">source</a>]
---
---@param playerID integer
---@param reason string
function Callins:PlayerRemoved(playerID, reason) end

---Units
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1035-L1038" target="_blank">source</a>]
---
---@section units

---Called at the moment the unit is created.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1059-L1066" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param builderID integer?
function Callins:UnitCreated(unitID, unitDefID, unitTeam, builderID) end

---Called at the moment the unit is completed.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1090-L1096" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitFinished(unitID, unitDefID, unitTeam) end

---Called when a factory finishes construction of a unit.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1104-L1113" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param factID integer
---@param factDefID integer
---@param userOrders boolean
function Callins:UnitFromFactory(unitID, unitDefID, unitTeam, factID, factDefID, userOrders) end

---Called when a living unit becomes a nanoframe again.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1138-L1144" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitReverseBuilt(unitID, unitDefID, unitTeam) end

---Called when a unit being built starts decaying.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1153-L1162" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param timeSinceLastBuild number
---@param iterationPeriod number
---@param part number
function Callins:UnitConstructionDecayed(unitID, unitDefID, unitTeam, timeSinceLastBuild, iterationPeriod, part) end

---Called when a unit is destroyed.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1186-L1196" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param attackerID integer
---@param attackerDefID integer
---@param attackerTeam number
---@param weaponDefID integer
function Callins:UnitDestroyed(unitID, unitDefID, unitTeam, attackerID, attackerDefID, attackerTeam, weaponDefID) end

---Called when a unit is transferred between teams. This is called before `UnitGiven` and in that moment unit is still assigned to the oldTeam.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1224-L1231" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param oldTeam number
---@param newTeam number
function Callins:UnitTaken(unitID, unitDefID, oldTeam, newTeam) end

---Called when a unit is transferred between teams. This is called after `UnitTaken` and in that moment unit is assigned to the newTeam.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1253-L1260" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param newTeam number
---@param oldTeam number
function Callins:UnitGiven(unitID, unitDefID, newTeam, oldTeam) end

---Called when a unit is idle (empty command queue).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1282-L1288" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitIdle(unitID, unitDefID, unitTeam) end

---Called after when a unit accepts a command, after `AllowCommand` returns true.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1296-L1306" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param cmdID integer
---@param cmdParams table
---@param options CommandOptions
---@param cmdTag number
function Callins:UnitCommand(unitID, unitDefID, unitTeam, cmdID, cmdParams, options, cmdTag) end

---Called when a unit completes a command.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1330-L1340" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param cmdID integer
---@param cmdParams table
---@param options CommandOptions
---@param cmdTag number
function Callins:UnitCmdDone(unitID, unitDefID, unitTeam, cmdID, cmdParams, options, cmdTag) end

---Called when a unit is damaged (after UnitPreDamaged).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1360-L1373" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param damage number
---@param paralyzer number
---@param weaponDefID integer
---@param projectileID integer
---@param attackerID integer
---@param attackerDefID integer
---@param attackerTeam number
function Callins:UnitDamaged(unitID, unitDefID, unitTeam, damage, paralyzer, weaponDefID, projectileID, attackerID, attackerDefID, attackerTeam) end

---Called when a unit changes its stun status.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1408-L1415" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param stunned boolean
function Callins:UnitStunned(unitID, unitDefID, unitTeam, stunned) end

---Called when a unit gains experience greater or equal to the minimum limit set by calling `Spring.SetExperienceGrade`.
---
---Should be called more reliably with small values of experience grade.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1439-L1451" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param experience number
---@param oldExperience number
function Callins:UnitExperience(unitID, unitDefID, unitTeam, experience, oldExperience) end

---Called when a unit's harvestStorage is full (according to its unitDef's entry).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1475-L1481" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitHarvestStorageFull(unitID, unitDefID, unitTeam) end

---Called when a unit emits a seismic ping.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1491-L1504" target="_blank">source</a>]
---
---See `seismicSignature`.
---
---@param x number
---@param y number
---@param z number
---@param strength number
---@param allyTeam integer
---@param unitID integer
---@param unitDefID integer
function Callins:UnitSeismicPing(x, y, z, strength, allyTeam, unitID, unitDefID) end

---Called when a unit enters radar of an allyteam.
---
---Also called when a unit enters LOS without any radar coverage.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1558-L1568" target="_blank">source</a>]
---
---@param unitID integer
---@param unitTeam integer
---@param allyTeam integer
---@param unitDefID integer
function Callins:UnitEnteredRadar(unitID, unitTeam, allyTeam, unitDefID) end

---Called when a unit enters LOS of an allyteam.
---
---Its called after the unit is in LOS, so you can query that unit.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1577-L1587" target="_blank">source</a>]
---
---@param unitID integer
---@param unitTeam integer
---@param allyTeam integer who's LOS the unit entered.
---@param unitDefID integer
function Callins:UnitEnteredLos(unitID, unitTeam, allyTeam, unitDefID) end

---Called when a unit leaves radar of an allyteam.
---
---Also called when a unit leaves LOS without any radar coverage.
---For widgets, this is called just after a unit leaves radar coverage, so
---widgets cannot get the position of units that left their radar.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1595-L1607" target="_blank">source</a>]
---
---@param unitID integer
---@param unitTeam integer
---@param allyTeam integer
---@param unitDefID integer
function Callins:UnitLeftRadar(unitID, unitTeam, allyTeam, unitDefID) end

---Called when a unit leaves LOS of an allyteam.
---
---For widgets, this one is called just before the unit leaves los, so you can still get the position of a unit that left los.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1616-L1626" target="_blank">source</a>]
---
---@param unitID integer
---@param unitTeam integer
---@param allyTeam integer
---@param unitDefID integer
function Callins:UnitLeftLos(unitID, unitTeam, allyTeam, unitDefID) end

---Transport
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1634-L1637" target="_blank">source</a>]
---
---@section transport

---Called when a unit is loaded by a transport.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1640-L1648" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param transportID integer
---@param transportTeam integer
function Callins:UnitLoaded(unitID, unitDefID, unitTeam, transportID, transportTeam) end

---Called when a unit is unloaded by a transport.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1672-L1680" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param transportID integer
---@param transportTeam integer
function Callins:UnitUnloaded(unitID, unitDefID, unitTeam, transportID, transportTeam) end

---Unit Interactions
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1704-L1707" target="_blank">source</a>]
---
---@section unit_interactions

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1710-L1716" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitEnteredUnderwater(unitID, unitDefID, unitTeam) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1724-L1730" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitEnteredWater(unitID, unitDefID, unitTeam) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1738-L1745" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitLeftAir(unitID, unitDefID, unitTeam) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1753-L1760" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitLeftUnderwater(unitID, unitDefID, unitTeam) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1767-L1774" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitLeftWater(unitID, unitDefID, unitTeam) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1782-L1789" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitEnteredAir(unitID, unitDefID, unitTeam) end

---Called when a unit cloaks.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1797-L1804" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitCloaked(unitID, unitDefID, unitTeam) end

---Called when a unit decloaks.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1812-L1819" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitDecloaked(unitID, unitDefID, unitTeam) end

---Called when two units collide.
---
---Both units must be registered with `Script.SetWatchUnit`.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1827-L1834" target="_blank">source</a>]
---
---@param colliderID integer
---@param collideeID integer
function Callins:UnitUnitCollision(colliderID, collideeID) end

---Called when a unit collides with a feature.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1878-L1886" target="_blank">source</a>]
---
---The unit must be registered with `Script.SetWatchUnit` and the feature registered with `Script.SetWatchFeature`.
---
---@param colliderID integer
---@param collideeID integer
function Callins:UnitFeatureCollision(colliderID, collideeID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1931-L1938" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitMoveFailed(unitID, unitDefID, unitTeam) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1953-L1960" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:UnitArrivedAtGoal(unitID, unitDefID, unitTeam) end

---Called just before a unit is invalid, after it finishes its death animation.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L1970-L1977" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
function Callins:RenderUnitDestroyed(unitID, unitDefID, unitTeam) end

---Features
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2002-L2005" target="_blank">source</a>]
---
---@section features

---Called when a feature is created.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2008-L2014" target="_blank">source</a>]
---
---@param featureID integer
---@param allyTeamID integer
function Callins:FeatureCreated(featureID, allyTeamID) end

---Called when a feature is destroyed.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2035-L2041" target="_blank">source</a>]
---
---@param featureID integer
---@param allyTeamID integer
function Callins:FeatureDestroyed(featureID, allyTeamID) end

---Called when a feature is damaged.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2062-L2075" target="_blank">source</a>]
---
---@param featureID integer
---@param featureDefID integer
---@param featureTeam number
---@param damage number
---@param weaponDefID integer
---@param projectileID integer
---@param attackerID integer
---@param attackerDefID integer
---@param attackerTeam number
function Callins:FeatureDamaged(featureID, featureDefID, featureTeam, damage, weaponDefID, projectileID, attackerID, attackerDefID, attackerTeam) end

---Projectiles
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2109-L2115" target="_blank">source</a>]
---
---@section projectiles
---
---The following Callins are only called for weaponDefIDs registered
---via Script.SetWatchWeapon or Script.SetWatchProjectile.

---Called when the projectile is created.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2117-L2129" target="_blank">source</a>]
---
---Note that weaponDefID is missing if the projectile is spawned as part of a burst, but `Spring.GetProjectileDefID` and `Spring.GetProjectileName` still work in callin scope using proID.
---
---@param proID integer
---@param proOwnerID integer
---@param weaponDefID integer
---@see Script.SetWatchProjectile
---@see Script.SetWatchWeapon
function Callins:ProjectileCreated(proID, proOwnerID, weaponDefID) end

---Called when the projectile is destroyed.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2169-L2178" target="_blank">source</a>]
---
---@param proID integer
---@param ownerID integer
---@param proWeaponDefID integer
---@see Script.SetWatchProjectile
---@see Script.SetWatchWeapon
function Callins:ProjectileDestroyed(proID, ownerID, proWeaponDefID) end

---Helper to get Explosion visibility.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2225-L2227" target="_blank">source</a>]

---Called when an explosion occurs.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2235-L2252" target="_blank">source</a>]
---
---Only called for weaponDefIDs registered via Script.SetWatchExplosion or Script.SetWatchWeapon.
---
---@param weaponDefID integer
---@param px number
---@param py number
---@param pz number
---@param attackerID integer
---@param projectileID integer
---@return boolean noGfx if then no graphical effects are drawn by the engine for this explosion.
---@see Script.SetWatchExplosion
---@see Script.SetWatchWeapon
function Callins:Explosion(weaponDefID, px, py, pz, attackerID, projectileID) end

---Called when a units stockpile of weapons increases or decreases.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2301-L2311" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param weaponNum integer
---@param oldCount integer
---@param newCount integer
function Callins:StockpileChanged(unitID, unitDefID, unitTeam, weaponNum, oldCount, newCount) end

---Receives messages from unsynced sent via `Spring.SendLuaRulesMsg` or `Spring.SendLuaUIMsg`.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2336-L2341" target="_blank">source</a>]
---
---@param msg string
---@param playerID integer
function Callins:RecvLuaMsg(msg, playerID) end

---Called when a chat command '/save' or '/savegame' is received.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2472-L2476" target="_blank">source</a>]
---
---@param zip table a userdatum representing the savegame zip file. See Lua_SaveLoad.
function Callins:Save(zip) end

---Called when the unsynced copy of the height-map is altered.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2498-L2505" target="_blank">source</a>]
---
---@return number x1
---@return number z1
---@return number x2
---@return number z2
function Callins:UnsyncedHeightMapUpdate() end

---Called for every draw frame (including when the game is paused) and at least once per sim frame except when catching up.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2525-L2529" target="_blank">source</a>]
---
---@param dt number the time since the last update.
function Callins:Update(dt) end

---Called whenever the window is resized.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2544-L2549" target="_blank">source</a>]
---
---@param viewSizeX number
---@param viewSizeY number
function Callins:ViewResize(viewSizeX, viewSizeY) end

---Called whenever fonts are updated. Signals the game display lists
---  and other caches should be discarded.
---
---Gets called before other Update and Draw callins.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2583-L2589" target="_blank">source</a>]
function Callins:FontsChanged() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2604-L2606" target="_blank">source</a>]
function Callins:SunChanged() end

---Used to set the default command when a unit is selected.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2620-L2625" target="_blank">source</a>]
---
---@param type "unit"|"feature" The type of the object pointed at.
---@param id integer The `unitID` or `featureID`.
function Callins:DefaultCommand(type, id) end

---Draw* Functions
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2703-L2710" target="_blank">source</a>]
---
---@section draw
---
---Inside the Draw* functions, you can use the Lua OpenGL Api to draw graphics.
---
---Avoid doing heavy calculations inside these callins; ideally, do the calculations elsewhere and use Draw callins only for drawing.

---Use this callin to update textures, shaders, etc.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2712-L2718" target="_blank">source</a>]
---
---Doesn't render to screen!
---Also available to LuaMenu.
function Callins:DrawGenesis() end

---Spring draws command queues, 'map stuff', and map marks.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2721-L2724" target="_blank">source</a>]
function Callins:DrawWorld() end

---Spring draws units, features, some water types, cloaked units, and the sun.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2727-L2730" target="_blank">source</a>]
function Callins:DrawWorldPreUnit() end

---Called before decals are drawn
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2733-L2736" target="_blank">source</a>]
function Callins:DrawPreDecals() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2739-L2741" target="_blank">source</a>]
function Callins:DrawWaterPost() end

---Invoked after semi-transparent shadows pass is about to conclude
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2744-L2748" target="_blank">source</a>]
---
---This callin has depth and color buffer of shadowmap bound via FBO as well as the FFP state to do "semi-transparent" shadows pass (traditionally only used to draw shadows of shadow casting semi-transparent particles). Can be used to draw nice colored shadows.
function Callins:DrawShadowPassTransparent() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2751-L2753" target="_blank">source</a>]
function Callins:DrawWorldShadow() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2756-L2758" target="_blank">source</a>]
function Callins:DrawWorldReflection() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2761-L2763" target="_blank">source</a>]
function Callins:DrawWorldRefraction() end

---Runs at the start of the forward pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2766-L2769" target="_blank">source</a>]
function Callins:DrawGroundPreForward() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2772-L2774" target="_blank">source</a>]
function Callins:DrawGroundPostForward() end

---Runs at the start of the deferred pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2777-L2780" target="_blank">source</a>]
function Callins:DrawGroundPreDeferred() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2783-L2785" target="_blank">source</a>]
function Callins:DrawGroundDeferred() end

---This runs at the end of its respective deferred pass.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2788-L2793" target="_blank">source</a>]
---
---Allows proper frame compositing (with ground flashes/decals/foliage/etc, which are drawn between it and `DrawWorldPreUnit`) via `gl.CopyToTexture`.
function Callins:DrawGroundPostDeferred() end

---Runs at the end of the unit deferred pass.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2796-L2801" target="_blank">source</a>]
---
---Informs Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.
function Callins:DrawUnitsPostDeferred() end

---Runs at the end of the feature deferred pass to inform Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2804-L2807" target="_blank">source</a>]
function Callins:DrawFeaturesPostDeferred() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2810-L2812" target="_blank">source</a>]
function Callins:DrawShadowUnitsLua() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2815-L2817" target="_blank">source</a>]
function Callins:DrawShadowFeaturesLua() end

---DrawWorldPreParticles is called multiples times per draw frame.
---Each call has a different permutation of values for drawAboveWater, drawBelowWater, drawReflection, and drawRefraction.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2820-L2829" target="_blank">source</a>]
---
---@param drawAboveWater boolean
---@param drawBelowWater boolean
---@param drawReflection boolean
---@param drawRefraction boolean
function Callins:DrawWorldPreParticles(drawAboveWater, drawBelowWater, drawReflection, drawRefraction) end

---Also available to LuaMenu.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2868-L2873" target="_blank">source</a>]
---
---@param viewSizeX number
---@param viewSizeY number
function Callins:DrawScreen(viewSizeX, viewSizeY) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2885-L2889" target="_blank">source</a>]
---
---@param viewSizeX number
---@param viewSizeY number
function Callins:DrawScreenEffects(viewSizeX, viewSizeY) end

---Similar to DrawScreenEffects, this can be used to alter the contents of a frame after it has been completely rendered (i.e. World, MiniMap, Menu, UI).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2901-L2909" target="_blank">source</a>]
---
---Note: This callin is invoked after the software rendered cursor (configuration variable HardwareCursor=0) is drawn.
---
---@param viewSizeX number
---@param viewSizeY number
function Callins:DrawScreenPost(viewSizeX, viewSizeY) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2921-L2926" target="_blank">source</a>]
---
---@param sx number relative to the minimap's position and scale.
---@param sy number relative to the minimap's position and scale.
function Callins:DrawInMiniMap(sx, sy) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L2949-L2954" target="_blank">source</a>]
---
---@param sx number relative to the minimap's position and scale.
---@param sy number relative to the minimap's position and scale.
function Callins:DrawInMiniMapBackground(sx, sy) end

---Called every 60 frames, calculating delta between `GameFrame` and `GameProgress`.
---
---Can give an ETA about catching up with simulation for mid-game join players.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3024-L3030" target="_blank">source</a>]
---
---@param serverFrameNum integer
function Callins:GameProgress(serverFrameNum) end

---Called when the keymap changes
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3068-L3073" target="_blank">source</a>]
---
---Can be caused due to a change in language or keyboard
function Callins:KeyMapChanged() end

---Input
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3092-L3095" target="_blank">source</a>]
---
---@section input

---Key Modifier Params
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3098-L3107" target="_blank">source</a>]
---
---@class KeyModifiers
---@x_helper
---@field right boolean Right mouse key pressed
---@field alt boolean Alt key pressed
---@field ctrl boolean Ctrl key pressed
---@field shift boolean Shift key pressed
local KeyModifiers = {}

---Called repeatedly when a key is pressed down.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3110-L3124" target="_blank">source</a>]
---
---Return true if you don't want other callins or the engine to also receive this keypress. A list of key codes can be seen at the SDL wiki.
---
---@param keyCode number
---@param mods KeyModifiers
---@param isRepeat boolean If you want an action to occur only once check for isRepeat == false.
---@param label boolean the name of the key
---@param utf32char number (deprecated) always 0
---@param scanCode number
---@param actionList table the list of actions for this keypress
---@return boolean halt whether to halt the chain for consumers of the keypress
function Callins:KeyPress(keyCode, mods, isRepeat, label, utf32char, scanCode, actionList) end

---Called when the key is released.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3178-L3190" target="_blank">source</a>]
---
---@param keyCode number
---@param mods KeyModifiers
---@param label boolean the name of the key
---@param utf32char number (deprecated) always 0
---@param scanCode number
---@param actionList table the list of actions for this keyrelease
---@return boolean
function Callins:KeyRelease(keyCode, mods, label, utf32char, scanCode, actionList) end

---Called whenever a key press results in text input.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3239-L3244" target="_blank">source</a>]
---
---@param utf8char string
function Callins:TextInput(utf8char) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3267-L3274" target="_blank">source</a>]
---
---@param utf8 string
---@param start number
---@param length number
function Callins:TextEditing(utf8, start, length) end

---Called when a mouse button is pressed.
---
---The button parameter supports up to 7 buttons. Must return true for `MouseRelease` and other functions to be called.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3297-L3306" target="_blank">source</a>]
---
---@param x number
---@param y number
---@param button number
---@return boolean becomeMouseOwner
function Callins:MousePress(x, y, button) end

---Called when a mouse button is released.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3330-L3340" target="_blank">source</a>]
---
---Please note that in order to have Spring call `Spring.MouseRelease`, you need to have a `Spring.MousePress` call-in in the same addon that returns true.
---
---@param x number
---@param y number
---@param button number
---@return boolean becomeMouseOwner
function Callins:MouseRelease(x, y, button) end

---Called when the mouse is moved.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3359-L3368" target="_blank">source</a>]
---
---@param x number final x position
---@param y number final y position
---@param dx number distance travelled in x
---@param dy number distance travelled in y
---@param button number
function Callins:MouseMove(x, y, dx, dy, button) end

---Called when the mouse wheel is moved.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3394-L3400" target="_blank">source</a>]
---
---@param up boolean the direction
---@param value number the amount travelled
function Callins:MouseWheel(up, value) end

---Called every `Update`.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3421-L3430" target="_blank">source</a>]
---
---Must return true for `Mouse*` events and `Spring.GetToolTip` to be called.
---
---@param x number
---@param y number
---@return boolean isAbove
function Callins:IsAbove(x, y) end

---Called when `Spring.IsAbove` returns true.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3452-L3458" target="_blank">source</a>]
---
---@param x number
---@param y number
---@return string tooltip
function Callins:GetTooltip(x, y) end

---Called when a command is issued.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3480-L3485" target="_blank">source</a>]
---
---@param cmdId integer?
---@param cmdType integer?
function Callins:ActiveCommandChanged(cmdId, cmdType) end

---Called whenever the camera rotation changes
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3506-L3512" target="_blank">source</a>]
---
---@param rotX number Camera rotation around the x axis in radians.
---@param rotY number Camera rotation around the y axis in radians.
---@param rotZ number Camera rotation around the z axis in radians.
function Callins:CameraRotationChanged(rotX, rotY, rotZ) end

---Called whenever the camera position changes
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3529-L3535" target="_blank">source</a>]
---
---@param posX number Camera position x in world coordinates
---@param posY number Camera position y in world coordinates
---@param posZ number Camera position z in world coordinates
function Callins:CameraPositionChanged(posX, posY, posZ) end

---Called when a command is issued.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3553-L3560" target="_blank">source</a>]
---
---@param cmdID integer
---@param cmdParams table
---@param options CommandOptions
---@return boolean Returning true deletes the command and does not send it through the network.
function Callins:CommandNotify(cmdID, cmdParams, options) end

---Called when text is entered into the console (e.g. `Spring.Echo`).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3589-L3594" target="_blank">source</a>]
---
---@param msg string
---@param priority integer
function Callins:AddConsoleLine(msg, priority) end

---Called when a unit is added to or removed from a control group.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3612-L3616" target="_blank">source</a>]
---
---@param groupID integer
function Callins:GroupChanged(groupID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3632-L3637" target="_blank">source</a>]
---
---@param type "unit"
---@param unitId integer
---@return string tooltip
function Callins:WorldTooltip(type, unitId) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3638-L3643" target="_blank">source</a>]
---
---@param type "feature"
---@param featureId integer
---@return string tooltip
function Callins:WorldTooltip(type, featureId) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3644-L3651" target="_blank">source</a>]
---
---@param type "ground"
---@param posX number
---@param posY number
---@param posZ number
---@return string tooltip
function Callins:WorldTooltip(type, posX, posY, posZ) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3652-L3656" target="_blank">source</a>]
---
---@param type "selection"
---@return string tooltip
function Callins:WorldTooltip(type) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3700-L3708" target="_blank">source</a>]
---
---@param playerID integer
---@param type "point"
---@param posX number
---@param posY number
---@param posZ number
---@param label string
function Callins:MapDrawCmd(playerID, type, posX, posY, posZ, label) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3709-L3719" target="_blank">source</a>]
---
---@param playerID integer
---@param type "line"
---@param pos1X number
---@param pos1Y number
---@param pos1Z number
---@param pos2X number
---@param pos2Y number
---@param pos2Z number
function Callins:MapDrawCmd(playerID, type, pos1X, pos1Y, pos1Z, pos2X, pos2Y, pos2Z) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3720-L3728" target="_blank">source</a>]
---
---@param playerID integer
---@param type "erase"
---@param posX number
---@param posY number
---@param posZ number
---@param radius number
function Callins:MapDrawCmd(playerID, type, posX, posY, posZ, radius) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3788-L3796" target="_blank">source</a>]
---
---@param state string
---@param ready boolean
---@param playerStates table
---@return boolean success
---@return boolean newReady
function Callins:GameSetup(state, ready, playerStates) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3839-L3843" target="_blank">source</a>]
---
---@param aiTeam integer
---@param dataStr string
function Callins:RecvSkirmishAIMessage(aiTeam, dataStr) end

---Downloads
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3880-L3882" target="_blank">source</a>]
---
---@section downloads

---Called when a Pr-downloader download is queued
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3884-L3890" target="_blank">source</a>]
---
---@param id integer
---@param name string
---@param type string
function Callins:DownloadQueued(id, name, type) end

---Called when a Pr-downloader download is started via VFS.DownloadArchive.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3912-L3916" target="_blank">source</a>]
---
---@param id integer
function Callins:DownloadStarted(id) end

---Called when a Pr-downloader download finishes successfully.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3935-L3939" target="_blank">source</a>]
---
---@param id integer
function Callins:DownloadFinished(id) end

---Called when a Pr-downloader download fails to complete.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3958-L3963" target="_blank">source</a>]
---
---@param id integer
---@param errorID integer
function Callins:DownloadFailed(id, errorID) end

---Called incrementally during a Pr-downloader download.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L3983-L3989" target="_blank">source</a>]
---
---@param id integer
---@param downloaded integer
---@param total integer
function Callins:DownloadProgress(id, downloaded, total) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4107-L4107" target="_blank">source</a>]
Script.NO_ACCESS_TEAM = -1

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4109-L4109" target="_blank">source</a>]
Script.ALL_ACCESS_TEAM = -2

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4130-L4133" target="_blank">source</a>]
---
---@return string name
function Script.GetName() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4141-L4144" target="_blank">source</a>]
---
---@return boolean synced
function Script.GetSynced() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4152-L4155" target="_blank">source</a>]
---
---@return boolean fullCtrl
function Script.GetFullCtrl() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4163-L4166" target="_blank">source</a>]
---
---@return boolean fullRead
function Script.GetFullRead() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4174-L4177" target="_blank">source</a>]
---
---@return integer teamID
function Script.GetCtrlTeam() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4185-L4188" target="_blank">source</a>]
---
---@return integer teamID
function Script.GetReadTeam() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4196-L4199" target="_blank">source</a>]
---
---@return integer allyTeamID
function Script.GetReadAllyTeam() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4207-L4210" target="_blank">source</a>]
---
---@return integer teamID
function Script.GetSelectTeam() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4218-L4221" target="_blank">source</a>]
---
---@return integer? global
function Script.GetGlobal() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4232-L4235" target="_blank">source</a>]
---
---@return integer? registry
function Script.GetRegistry() end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandle.cpp#L4252-L4256" target="_blank">source</a>]
---
---@param frameDelay integer
---@param fun (...) func
function Script.DelayByFrames(frameDelay, fun) end