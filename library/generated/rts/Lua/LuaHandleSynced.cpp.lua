---!!! DO NOT MANUALLY EDIT THIS FILE !!!
---Generated by lua-doc-extractor 3.3.2
---https://github.com/rhys-vdw/lua-doc-extractor
---
---Source: rts/Lua/LuaHandleSynced.cpp
---
---@meta

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L119-L119" target="_blank">source</a>]
---@type integer
COBSCALE = nil

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L178-L181" target="_blank">source</a>]
---
---@class UnsyncedCallins Functions called by the Engine (Unsynced).
local UnsyncedCallins = {}

---Misc
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L183-L187" target="_blank">source</a>]
---
---@section misc

---Receives data sent via `SendToUnsynced` callout.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L189-L193" target="_blank">source</a>]
---
---@param ... any
function UnsyncedCallins:RecvFromSynced(...) end

---Custom Object Rendering
---
---For the following calls drawMode can be one of the following, notDrawing = 0, normalDraw = 1, shadowDraw = 2, reflectionDraw = 3, refractionDraw = 4, and finally gameDeferredDraw = 5 which was added in 102.0.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L213-L218" target="_blank">source</a>]
---
---@section custom_object

---For custom rendering of units
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L220-L227" target="_blank">source</a>]
---
---@param unitID integer
---@param drawMode number
---@return boolean suppressEngineDraw
---@deprecated
function UnsyncedCallins:DrawUnit(unitID, drawMode) end

---For custom rendering of features
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L257-L264" target="_blank">source</a>]
---
---@param featureID integer
---@param drawMode number
---@return boolean suppressEngineDraw
---@deprecated
function UnsyncedCallins:DrawFeature(featureID, drawMode) end

---For custom rendering of shields.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L293-L301" target="_blank">source</a>]
---
---@param featureID integer
---@param weaponID integer
---@param drawMode number
---@return boolean suppressEngineDraw
---@deprecated
function UnsyncedCallins:DrawShield(featureID, weaponID, drawMode) end

---For custom rendering of weapon (& other) projectiles
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L332-L339" target="_blank">source</a>]
---
---@param projectileID integer
---@param drawMode number
---@return boolean suppressEngineDraw
---@deprecated
function UnsyncedCallins:DrawProjectile(projectileID, drawMode) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L370-L377" target="_blank">source</a>]
---
---@param uuid integer
---@param drawMode number
---@return boolean suppressEngineDraw
---@deprecated
function UnsyncedCallins:DrawMaterial(uuid, drawMode) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L571-L574" target="_blank">source</a>]
---
---@class SyncedCallins Functions called by the Engine (Synced).
local SyncedCallins = {}

---Called when the unit reaches an unknown command in its queue (i.e. one not handled by the engine).
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L592-L603" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param cmdID integer
---@param cmdParams number[]
---@param cmdOptions CommandOptions
---@param cmdTag number
---@return boolean whether to remove the command from the queue
function SyncedCallins:CommandFallback(unitID, unitDefID, unitTeam, cmdID, cmdParams, cmdOptions, cmdTag) end

---Called when the command is given, before the unit's queue is altered.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L625-L641" target="_blank">source</a>]
---
---The queue remains untouched when a command is blocked, whether it would be queued or replace the queue.
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param cmdID integer
---@param cmdParams number[]
---@param cmdOptions CommandOptions
---@param cmdTag number
---@param synced boolean
---@param fromLua boolean
---@return boolean whether it should be let into the queue.
function SyncedCallins:AllowCommand(unitID, unitDefID, unitTeam, cmdID, cmdParams, cmdOptions, cmdTag, synced, fromLua) end

---Called just before unit is created.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L669-L680" target="_blank">source</a>]
---
---@param unitDefID integer
---@param builderID integer
---@param builderTeam integer
---@param x number
---@param y number
---@param z number
---@param facing FacingInteger
---@return boolean allow, boolean dropOrder
function SyncedCallins:AllowUnitCreation(unitDefID, builderID, builderTeam, x, y, z, facing) end

---Called just before a unit is transferred to a different team.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L716-L725" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param oldTeam integer
---@param newTeam integer
---@param capture boolean
---@return boolean whether or not the transfer is permitted.
function SyncedCallins:AllowUnitTransfer(unitID, unitDefID, oldTeam, newTeam, capture) end

---Called just before a unit progresses its build percentage.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L753-L762" target="_blank">source</a>]
---
---@param builderID integer
---@param builderTeam integer
---@param unitID integer
---@param unitDefID integer
---@param part number
---@return boolean whether or not the build makes progress.
function SyncedCallins:AllowUnitBuildStep(builderID, builderTeam, unitID, unitDefID, part) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L790-L799" target="_blank">source</a>]
---
---@param builderID integer
---@param builderTeam integer
---@param unitID integer
---@param unitDefID integer
---@param part number
---@return boolean whether or not the capture makes progress.
function SyncedCallins:AllowUnitCaptureStep(builderID, builderTeam, unitID, unitDefID, part) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L827-L837" target="_blank">source</a>]
---
---@param transporterID integer
---@param transporterUnitDefID integer
---@param transporterTeam integer
---@param transporteeID integer
---@param transporteeUnitDefID integer
---@param transporteeTeam integer
---@return boolean whether or not the transport is allowed
function SyncedCallins:AllowUnitTransport(transporterID, transporterUnitDefID, transporterTeam, transporteeID, transporteeUnitDefID, transporteeTeam) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L865-L878" target="_blank">source</a>]
---
---@param transporterID integer
---@param transporterUnitDefID integer
---@param transporterTeam integer
---@param transporteeID integer
---@param transporteeUnitDefID integer
---@param transporteeTeam integer
---@param x number
---@param y number
---@param z number
---@return boolean whether or not the transport load is allowed
function SyncedCallins:AllowUnitTransportLoad(transporterID, transporterUnitDefID, transporterTeam, transporteeID, transporteeUnitDefID, transporteeTeam, x, y, z) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L915-L928" target="_blank">source</a>]
---
---@param transporterID integer
---@param transporterUnitDefID integer
---@param transporterTeam integer
---@param transporteeID integer
---@param transporteeUnitDefID integer
---@param transporteeTeam integer
---@param x number
---@param y number
---@param z number
---@return boolean whether or not the transport unload is allowed
function SyncedCallins:AllowUnitTransportUnload(transporterID, transporterUnitDefID, transporterTeam, transporteeID, transporteeUnitDefID, transporteeTeam, x, y, z) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L963-L969" target="_blank">source</a>]
---
---@param unitID integer
---@param enemyID integer?
---@return boolean whether unit is allowed to cloak
function SyncedCallins:AllowUnitCloak(unitID, enemyID) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L999-L1006" target="_blank">source</a>]
---
---@param unitID integer
---@param objectID integer?
---@param weaponNum number?
---@return boolean whether unit is allowed to decloak
function SyncedCallins:AllowUnitCloak(unitID, objectID, weaponNum) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1043-L1049" target="_blank">source</a>]
---
---@param unitID integer
---@param targetID integer
---@return boolean whether unit is allowed to selfd
function SyncedCallins:AllowUnitKamikaze(unitID, targetID) end

---Called just before feature is created.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1073-L1082" target="_blank">source</a>]
---
---@param featureDefID integer
---@param teamID integer
---@param x number
---@param y number
---@param z number
---@return boolean whether or not the creation is permitted
function SyncedCallins:AllowFeatureCreation(featureDefID, teamID, x, y, z) end

---Called just before a feature changes its build percentage.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1110-L1127" target="_blank">source</a>]
---
---Note that this is also called for resurrecting features, and for refilling features with resources before resurrection.
---On reclaim the part values are negative, and on refill and resurrect they are positive.
---Part is the percentage the feature be built or reclaimed per frame.
---Eg. for a 30 workertime builder, that's a build power of 1 per frame.
---For a 50 buildtime feature reclaimed by this builder, part will be 100/-50(/1) = -2%, or -0.02 numerically.
---
---@param builderID integer
---@param builderTeam integer
---@param featureID integer
---@param featureDefID integer
---@param part number
---@return boolean whether or not the change is permitted
function SyncedCallins:AllowFeatureBuildStep(builderID, builderTeam, featureID, featureDefID, part) end

---Called when a team sets the sharing level of a resource.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1155-L1162" target="_blank">source</a>]
---
---@param teamID integer
---@param res string
---@param level number
---@return boolean whether or not the sharing level is permitted
function SyncedCallins:AllowResourceLevel(teamID, res, level) end

---Called just before resources are transferred between players.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1188-L1196" target="_blank">source</a>]
---
---@param oldTeamID integer
---@param newTeamID integer
---@param res string
---@param amount number
---@return boolean whether or not the transfer is permitted.
function SyncedCallins:AllowResourceTransfer(oldTeamID, newTeamID, res, amount) end

---Determines if this unit can be controlled directly in FPS view.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1223-L1231" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param playerID integer
---@return boolean allow
function SyncedCallins:AllowDirectUnitControl(unitID, unitDefID, unitTeam, playerID) end

---Called when a construction unit wants to "use his nano beams".
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1258-L1275" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param action -1|CMD
---
---One of the following:
---	- `-1` build,
---	- `CMD.REPAIR` repair,
---	- `CMD.RECLAIM` reclaim,
---	- `CMD.RESTORE` restore,
---	- `CMD.RESURRECT` resurrect, or
---	- `CMD.CAPTURE` capture.
---@return boolean actionAllowed
function SyncedCallins:AllowBuilderHoldFire(unitID, unitDefID, action) end

---Whether a start position should be allowed
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1301-L1326" target="_blank">source</a>]
---
---clamped{X,Y,Z} are the coordinates clamped into start-boxes, raw is where player tried to place their marker.
---
---The readyState can be any one of:
---
---    0 - player picked a position,
---    1 - player clicked ready,
---    2 - player pressed ready OR the game was force-started (player did not click ready, but is now forcibly readied) or
---    3 - the player failed to load.
---    The default 'failed to choose' start-position is the north-west point of their startbox, or (0,0,0) if they do not have a startbox.
---
---@param playerID integer
---@param teamID integer
---@param readyState number
---@param clampedX number
---@param clampedY number
---@param clampedZ number
---@param rawX number
---@param rawY number
---@param rawZ number
---@return boolean allow
function SyncedCallins:AllowStartPosition(playerID, teamID, readyState, clampedX, clampedY, clampedZ, rawX, rawY, rawZ) end

---Enable both Spring.MoveCtrl.SetCollideStop and Spring.MoveCtrl.SetTrackGround to enable this call-in.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1359-L1369" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param data number was supposed to indicate the type of notification but currently never has a value other than 1 ("unit hit the ground").
---@return boolean whether or not the unit should remain script-controlled (false) or return to engine controlled movement (true).
function SyncedCallins:MoveCtrlNotify(unitID, unitDefID, unitTeam, data) end

---Called when pre-building terrain levelling terraforms are completed (c.f. levelGround)
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1397-L1407" target="_blank">source</a>]
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param buildUnitID integer
---@param buildUnitDefID integer
---@param buildUnitTeam integer
---@return boolean if true the current build order is terminated
function SyncedCallins:TerraformComplete(unitID, unitDefID, unitTeam, buildUnitID, buildUnitDefID, buildUnitTeam) end

---Damage Controllers
---
---For the following callins, in addition to being a regular weapon, weaponDefID may be one of the following:
---
---    -1 - debris collision, also default of Spring.AddUnitDamage
---    -2 - ground collision
---    -3 - object collision
---    -4 - fire damage
---    -5 - water damage
---    -6 - kill damage
---    -7 - crush damage
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1441-L1453" target="_blank">source</a>]

---Called before damage is applied to the unit, allows fine control over how much damage and impulse is applied.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1455-L1477" target="_blank">source</a>]
---
---Called after every damage modification (even `HitByWeaponId`) but before the damage is applied
---
---expects two numbers returned by lua code:
---1st is stored under *newDamage if newDamage != NULL
---2nd is stored under *impulseMult if impulseMult != NULL
---
---@param unitID integer
---@param unitDefID integer
---@param unitTeam integer
---@param damage number
---@param paralyzer boolean
---@param weaponDefID integer? Synced Only
---@param projectileID integer? Synced Only
---@param attackerID integer? Synced Only
---@param attackerDefID integer? Synced Only
---@param attackerTeam integer? Synced Only
---@return number newDamage, number impulseMult
function SyncedCallins:UnitPreDamaged(unitID, unitDefID, unitTeam, damage, paralyzer, weaponDefID, projectileID, attackerID, attackerDefID, attackerTeam) end

---Called before damage is applied to the feature.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1551-L1568" target="_blank">source</a>]
---
---Allows fine control over how much damage and impulse is applied.
---
---@param featureID integer
---@param featureDefID integer
---@param featureTeam integer
---@param damage number
---@param weaponDefID integer
---@param projectileID integer
---@param attackerID integer
---@param attackerDefID integer
---@param attackerTeam integer
---@return number newDamage
---@return number impulseMult
function SyncedCallins:FeaturePreDamaged(featureID, featureDefID, featureTeam, damage, weaponDefID, projectileID, attackerID, attackerDefID, attackerTeam) end

---Called before any engine shield-vs-projectile logic executes.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1634-L1655" target="_blank">source</a>]
---
---If the weapon is a hitscan type (BeamLaser or LightningCanon) then proID is nil and beamEmitterWeaponNum and beamEmitterUnitID are populated instead.
---
---@param projectileID integer
---@param projectileOwnerID integer
---@param shieldWeaponNum integer
---@param shieldCarrierID integer
---@param bounceProjectile boolean
---@param beamEmitterWeaponNum integer
---@param beamEmitterUnitID integer
---@param startX number
---@param startY number
---@param startZ number
---@param hitX number
---@param hitY number
---@param hitZ number
---@return boolean if true the gadget handles the collision event and the engine does not remove the projectile
function SyncedCallins:ShieldPreDamaged(projectileID, projectileOwnerID, shieldWeaponNum, shieldCarrierID, bounceProjectile, beamEmitterWeaponNum, beamEmitterUnitID, startX, startY, startZ, hitX, hitY, hitZ) end

---Determines if this weapon can automatically generate targets itself. See also commandFire weaponDef tag.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1716-L1731" target="_blank">source</a>]
---
---Only called for weaponDefIDs registered via `Script.SetWatchAllowTarget` or `Script.SetWatchWeapon`.
---
---@param attackerID integer
---@param attackerWeaponNum integer
---@param attackerWeaponDefID integer
---@return boolean allowCheck
---@return boolean ignoreCheck
---@see Script.SetWatchAllowTarget
---@see Script.SetWatchWeapon
function SyncedCallins:AllowWeaponTargetCheck(attackerID, attackerWeaponNum, attackerWeaponDefID) end

---Controls blocking of a specific target from being considered during a weapon's periodic auto-targeting sweep.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1763-L1780" target="_blank">source</a>]
---
---Only called for weaponDefIDs registered via `Script.SetWatchAllowTarget` or `Script.SetWatchWeapon`.
---
---@param attackerID integer
---@param targetID integer
---@param attackerWeaponNum integer
---@param attackerWeaponDefID integer
---@param defPriority number
---@return boolean allowed
---@return number the new priority for this target (if you don't want to change it, return defPriority). Lower priority targets are targeted first.
---@see Script.SetWatchAllowTarget
---@see Script.SetWatchWeapon
function SyncedCallins:AllowWeaponTarget(attackerID, targetID, attackerWeaponNum, attackerWeaponDefID, defPriority) end

---Controls blocking of a specific intercept target from being considered during an interceptor weapon's periodic auto-targeting sweep.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L1833-L1847" target="_blank">source</a>]
---
---Only called for weaponDefIDs registered via `Script.SetWatchAllowTarget` or `Script.SetWatchWeapon`.
---
---@param interceptorUnitID integer
---@param interceptorWeaponID integer
---@param targetProjectileID integer
---@return boolean allowed
---@see Script.SetWatchAllowTarget
---@see Script.SetWatchWeapon
function SyncedCallins:AllowWeaponInterceptTarget(interceptorUnitID, interceptorWeaponID, targetProjectileID) end

---Invoke `UnsyncedCallins:RecvFromSynced` callin with the given arguments.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2003-L2013" target="_blank">source</a>]
---
---@param ... nil|boolean|number|string|table Arguments. Typically the first argument is the name of a function to call.
---
---Argument tables will be recursively copied and stripped of unsupported types and metatables.
---@see UnsyncedCallins:RecvFromSynced
function SyncedCallins.SendToUnsynced(...) end

---Register/deregister callins working per defID.
---
---Some of the engine callins can result in so many callins the engine doesn't forward them until registered
---through the following SetWatch* methods.
---
---The GetWatch* methods can be used to query the currently registered defIDs.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2165-L2173" target="_blank">source</a>]
---
---@section watch_methods

---Query whether any callins are registered for a unitDefID.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2175-L2183" target="_blank">source</a>]
---
---@param unitDefID integer
---@return boolean watched Watch status.
---@see Script.SetWatchUnit
function Script.GetWatchUnit(unitDefID) end

---Query whether any callins are registered for a featureDefID.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2188-L2196" target="_blank">source</a>]
---
---@param featureDefID integer
---@return boolean watched `true` if callins are registered, otherwise `false`.
---@see Script.SetWatchFeature
function Script.GetWatchFeature(featureDefID) end

---Query whether any callins are registered for a weaponDefID.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2201-L2214" target="_blank">source</a>]
---
---Same as calling:
---```lua
---Script.GetWatchExplosion(weaponDefID) or Script.GetWatchProjectile(weaponDefID) or Script.GetWatchAllowTarget(weaponDefID)
---```
---
---@param weaponDefID integer
---@return boolean watched True if watch is enabled for any weaponDefID callins.
---@see Script.SetWatchWeapon
function Script.GetWatchWeapon(weaponDefID) end

---Query whether explosion callins are registered for a weaponDefID.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2216-L2224" target="_blank">source</a>]
---
---@param weaponDefID integer
---@return boolean watched `true` if callins are registered, otherwise `false`.
---@see Script.SetWatchExplosion
function Script.GetWatchExplosion(weaponDefID) end

---Query whether projectile callins are registered for a weaponDefID.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2230-L2238" target="_blank">source</a>]
---
---@param weaponDefID integer
---@return boolean watched `true` if callins are registered, otherwise `false`.
---@see Script.SetWatchProjectile
function Script.GetWatchProjectile(weaponDefID) end

---Query whether weapon targeting callins are registered for a weaponDefID.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2243-L2251" target="_blank">source</a>]
---
---@param weaponDefID integer
---@return boolean watched `true` if callins are registered, otherwise `false`.
---@see Script.SetWatchAllowTarget
function Script.GetWatchAllowTarget(weaponDefID) end

---Register or deregister unitDefID for expensive callins.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2256-L2267" target="_blank">source</a>]
---
---@param unitDefID integer
---@param watch boolean Whether to register or deregister.
---@see Script.GetWatchUnit
---@see Callins:UnitFeatureCollision
---@see Callins:UnitUnitCollision
---@see Callins:UnitMoveFailed
function Script.SetWatchUnit(unitDefID, watch) end

---Register or deregister featureDefID for expensive callins.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2272-L2281" target="_blank">source</a>]
---
---@param featureDefID integer
---@param watch boolean Whether to register or deregister.
---@see Script.GetWatchFeature
---@see Callins:UnitFeatureCollision
function Script.SetWatchFeature(featureDefID, watch) end

---Register or deregister weaponDefID for all expensive callins.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2286-L2307" target="_blank">source</a>]
---
---Equivalent to calling:
---
---```lua
---Script.SetWatchExplosion(weaponDefID)
---Script.SetWatchProjectile(weaponDefID)
---Script.SetWatchAllowTarget(weaponDefID)
---```
---
---Generally it's better to use those methods to avoid registering uneeded callins.
---
---@param weaponDefID integer
---@param watch boolean Whether to register or deregister.
---@see Script.GetWatchWeapon
---@see Script.SetWatchExplosion
---@see Script.SetWatchProjectile
---@see Script.SetWatchAllowTarget
function Script.SetWatchWeapon(weaponDefID, watch) end

---Register or deregister weaponDefID for explosion callins.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2309-L2318" target="_blank">source</a>]
---
---@param weaponDefID integer
---@param watch boolean Whether to register or deregister.
---@see Script.GetWatchExplosion
---@see Callins:Explosion
function Script.SetWatchExplosion(weaponDefID, watch) end

---Register or deregister weaponDefID for expensive projectile callins.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2324-L2334" target="_blank">source</a>]
---
---@param weaponDefID integer weaponDefID for weapons or -1 to watch for debris.
---@param watch boolean Whether to register or deregister.
---@see Script.GetWatchProjectile
---@see Callins:ProjectileCreated
---@see Callins:ProjectileDestroyed
function Script.SetWatchProjectile(weaponDefID, watch) end

---Register or deregister weaponDefID for weapon targeting callins.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2339-L2350" target="_blank">source</a>]
---
---@param weaponDefID integer
---@param watch boolean Whether to register or deregister.
---@see Script.GetWatchAllowTarget
---@see SyncedCallins:AllowWeaponTargetCheck
---@see SyncedCallins:AllowWeaponTarget
---@see SyncedCallins:AllowWeaponInterceptTarget
function Script.SetWatchAllowTarget(weaponDefID, watch) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2519-L2525" target="_blank">source</a>]
---
---@class CallAsTeamOptions
---@x_helper
---@field ctrl integer Ctrl team ID.
---@field read integer Read team ID.
---@field select integer Select team ID.
local CallAsTeamOptions = {}

---Calls a function from given team's PoV. In particular this makes callouts obey that team's visibility rules.
---
---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2527-L2534" target="_blank">source</a>]
---
---@param teamID integer Team ID.
---@param func fun(...) The function to call.
---@param ... any Arguments to pass to the function.
---@return any ... The return values of the function.
function Spring.CallAsTeam(teamID, func, ...) end

---[<a href="https://github.com/beyond-all-reason/RecoilEngine/blob/master/rts/Lua/LuaHandleSynced.cpp#L2535-L2541" target="_blank">source</a>]
---
---@param options CallAsTeamOptions Options.
---@param func fun(...) The function to call.
---@param ... any Arguments to pass to the function.
---@return any ... The return values of the function.
function Spring.CallAsTeam(options, func, ...) end